<?xml version="1.0" encoding="utf-8"?>
<sln:solution displayName="S08_Coordinator" codebaseVersion="V01.00" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:sln="http://freescale.com/ns/beekit/solution" xmlns="http://freescale.com/ns/beekit/solution" xmlns:ssm="http://freescale.com/ns/beekit/ssm" xmlns:mac="http://freescale.com/ns/beekit/mac" xmlns:MacApps="http://freescale.com/ns/beekit/MacApps" xmlns:MyWirelessApp="http://freescale.com/ns/beekit/MyWirelessApp" xmlns:MyWirelessAppEx06a="http://freescale.com/ns/beekit/MyWirelessAppEx06a" xmlns:plm="http://freescale.com/ns/beekit/plm" xmlns:MyWirelessAppEx06b="http://freescale.com/ns/beekit/MyWirelessAppEx06b">
  <sln:description></sln:description>
  <sln:projects>
    <sln:project displayName="S08_Coordinator" wizard="BeeKitHCS08MACWizardV16">
      <sln:description>Template application</sln:description>
      <sln:components>
        <ssm:component displayName="Software Support Modules" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:ssm="http://freescale.com/ns/beekit/ssm" xmlns="http://freescale.com/ns/beekit/ssm">
          <temp:description>The Software Support Module (SSM) is a collection of hardware independent modules that are not specifically releated to any standard or specification (like IEEE 802.15.4 MAC/PHY or ZigBee). The SSM includes such modules as the Task Scheduler (TS) and the ZTC (ZigBee Test Client) protocol implementation.</temp:description>
          <ssm:properties>
            <ssm:ZTCenabled displayName="ZTC: ZTC enabled">
              <temp:description>
        Disable or enable ZTC support<br /><br />
        ZTC allows external tools, such as the Test Tool, to monitor messages (requests and responses) passing through the SAP Handlers between stack layers, and to inject messages for testing.<br />
        ZTC also provide an interface for sending and receiving mesages in the application.<br /><br />
        Note: It is not recommended to enable this module, unless you are a ZigBee expert and understand the 802.15.4 and ZigBee specification in detail.<br />
        Behavior can be:<br />
        1. It can change timing and throughput of the stack.<br />
        2. packets can be missed and the stack configured to malfunction.<br /><br />
        Note: Changing this property requires re-import of the project xml file.
      </temp:description>
              <ssm:value>false</ssm:value>
            </ssm:ZTCenabled>
          </ssm:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\CommUtil\CommUtil.h" destination=".\SSM\CommUtil\CommUtil.h" />
            <temp:file version="1.0" source=".\Generic\CommUtil\CommUtil.c" destination=".\SSM\CommUtil\CommUtil.c" />
            <temp:file version="1.0" source=".\Generic\TS\Interface\TS_Interface.h" destination=".\SSM\TS\Interface\TS_Interface.h">
              <temp:description />
              <ssm:properties>
                <ssm:TsMaxTasks displayName="TS: Number of tasks">
                  <temp:description>
          Maximum number of tasks in the task table. A minimum of 7 is needed for a MAC solution.
        </temp:description>
                  <temp:regExLib name="define" param1="gTsMaxTasks_c" />
                  <ssm:value>10</ssm:value>
                </ssm:TsMaxTasks>
              </ssm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\TS\Source\TS_kernel.h" destination=".\SSM\TS\Source\TS_kernel.h" />
            <temp:file version="1.0" source=".\Generic\TS\Source\TS_kernel.c" destination=".\SSM\TS\Source\TS_kernel.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Interface\AspZtc.h" destination=".\SSM\ZTC\Interface\aspZtc.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Interface\ZTCInterface.h" destination=".\SSM\ZTC\Interface\ZTCInterface.h">
              <temp:description />
              <ssm:properties>
                <ssm:gZtcCommInterfaceType_d displayName="Serial protocol to use for communication with the host">
                  <temp:description>
          This property must be set to either gSCIInterface_d, gI2CInterface_d or gSPIInterface_d <br />
          depending on the serial protocol to be used for the communication with the host.<br />
          If selected, the SCI interface can be configured through the defines listed in the UART_Interface.h file in the Platform component.<br />
          If selected, the I2C interface can be configured through the defines listed in the IIC_Interface.h file in the Platform component.<br />
          If selected, the SPI interface can be configured through the defines listed in the SPI_Interface.h file in the Platform component.
          <br /></temp:description>
                  <temp:regExLib name="define" param1="gZtcCommInterfaceType_d" />
                  <ssm:value>gSCIInterface_d</ssm:value>
                </ssm:gZtcCommInterfaceType_d>
                <ssm:ZtcMacGetSetPIBCapability displayName="ZTC: MAC Get/Set PIB Capability">
                  <temp:description>
          Enable MAC Get/Set PIB capability through ZTC.
          <br />
          Note: Turning this on is only useful if gSAPMessagesEnableMlme_d is also on.
        </temp:description>
                  <temp:regExLib name="define" param1="gZtcMacGetSetPIBCapability_d" />
                  <ssm:value>true</ssm:value>
                </ssm:ZtcMacGetSetPIBCapability>
                <ssm:SAPMessagesEnableMcps displayName="ZTC: MCPS SAP Capability">
                  <temp:description>
          Enable MCPS SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableMcps_d" />
                  <ssm:value>true</ssm:value>
                </ssm:SAPMessagesEnableMcps>
                <ssm:SAPMessagesEnableMlme displayName="ZTC: MLME SAP Capability">
                  <temp:description>
          Enable MLME SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableMlme_d" />
                  <ssm:value>true</ssm:value>
                </ssm:SAPMessagesEnableMlme>
                <ssm:SAPMessagesEnableAsp displayName="ZTC: ASP SAP Capability">
                  <temp:description>
          Enable ASP (Application Support in the MAC) SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableAsp_d" />
                  <ssm:value>false</ssm:value>
                </ssm:SAPMessagesEnableAsp>
                <ssm:ZtcErrorReporting displayName="ZTC: Error Reporting Capability">
                  <temp:description>
          Enable Error reporting in ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gZtcErrorReporting_d" />
                  <ssm:value>false</ssm:value>
                </ssm:ZtcErrorReporting>
              </ssm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcClientCommunication.c" destination=".\SSM\ZTC\Source\ZtcClientCommunication.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcClientCommunication.h" destination=".\SSM\ZTC\Source\ZtcClientCommunication.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyData.c" destination=".\SSM\ZTC\Source\ZtcCopyData.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyData.h" destination=".\SSM\ZTC\Source\ZtcCopyData.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyDataTbl.h" destination=".\SSM\ZTC\Source\ZtcCopyDataTbl.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcIBManagement.c" destination=".\SSM\ZTC\Source\ZtcIBManagement.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcIBManagement.h" destination=".\SSM\ZTC\Source\ZtcIBManagement.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMacPIB.h" destination=".\SSM\ZTC\Source\ZtcMacPIB.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMain.c" destination=".\SSM\ZTC\Source\ZtcMain.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfo.c" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfo.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfo.h" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfo.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfoTbl.h" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfoTbl.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcPrivate.h" destination=".\SSM\ZTC\Source\ZtcPrivate.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfo.c" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfo.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfo.h" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfo.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfoTbl.h" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfoTbl.h" />
          </temp:files>
          <temp:components />
        </ssm:component>
        <mac:component displayName="MacStandalone" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:mac="http://freescale.com/ns/beekit/mac" xmlns:plm="http://freescale.com/ns/beekit/plm" xmlns="http://freescale.com/ns/beekit/mac">
          <temp:description>
            <p>
        The 802.15.4 MAC/PHY component is an implementation of the IEEE 802.15.4 physical layer (PHY) and medium access control (MAC) sublayer used for low data rate wireless connectivity with fixed, portable, and moving devices with no battery or very limited battery consumption requirements typically operating in the personal operating space (POS).
</p>
            <p>
            The MAC component is provided as a library.The PHY component is provided as source code.
</p>

            There is a set of 7 available MAC libraries for HCS08-GT60 and 7 for HCS08-QE128 platforms. 
            All these are IEEE 802.15.4 Standard compliant devices which have different functionalities excluded. 
            This allows a greater flexibility in choosing a MAC which will have all the required application specific functionality and nothing more.<br />
            In order to differentiate these libraries, there is also a set of keywords used in the file naming. These keywords are enumerated and explained below:<br /><br /><blockquote><b>FFD</b>  - stands for "<b>F</b>ull <b>F</b>unction <b>D</b>evice". The Freescale 802.15.4 MAC software FFD type is an IEEE 802.15.4 Standard compliant Full Functional Device with all MAC features included. It can be used in applications that require both device and coordinator functionality such as ZigBee routers.<br /><br /><b>RFD</b>  - stands for "<b>R</b>educed <b>F</b>unction <b>D</b>evice". The Freescale 802.15.4 MAC software RFD device type is an IEEE 802.15.4 Standard compliant Reduced Functional Device. It can be used in applications that require device functionality only such as leaf devices.That is, end-devices with no child devices.<br /><br /><b>NB</b>   - stands for "<b>N</b>o <b>B</b>eacon". The Freescale 802.15.4 MAC software NB device type is an IEEE 802.15.4 Standard compliant device with the beacon functionality excluded. This library cannot be used for applications that need to participate in beaconed networks.<br /><br /><b>NS</b>   - stands for "<b>N</b>o <b>S</b>ecurity". The Freescale 802.15.4 MAC software NS device type is an IEEE 802.15.4 Standard compliant device with the security functionality excluded. This library cannot be used for applications that require encrypted or otherwise secured transactions.<br /><br /><b>NGTS</b> - stands for "<b>N</b>o <b>G</b>uaranteed <b>T</b>ime <b>S</b>lots". The Freescale 802.15.4 MAC software NGTS device type is an IEEE 802.15.4 Standard compliant device with the GTS functionality excluded. This library cannot be used for applications demanding GTS data transmissions.<br /><br /></blockquote><p>
          Below you can find the list of all 7 available MAC libraries for HCS08-GT60: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD.Lib<br /> 
                         2. 802.15.4_MAC_FFDNB.Lib<br /> 
                         3. 802.15.4_MAC_FFDNBNS.Lib<br />
                         4. 802.15.4_MAC_FFDNGTS.Lib<br />
                         5. 802.15.4_MAC_RFD.Lib<br />
                         6. 802.15.4_MAC_RFDNB.Lib<br />
                         7. 802.15.4_MAC_RFDNBNS.Lib<br /></blockquote></p><p>
          Below you can find the list of all 7 available MAC libraries for HCS08-QE128: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD_S08QE128.Lib<br />
                 2. 802.15.4_MAC_FFDNB_S08QE128.Lib<br /> 
                 3. 802.15.4_MAC_FFDNBNS_S08QE128.Lib<br />
                 4. 802.15.4_MAC_FFDNGTS_S08QE128.Lib<br />
                 5. 802.15.4_MAC_RFD_S08QE128.Lib<br />
                 6. 802.15.4_MAC_RFDNB_S08QE128.Lib<br />
                 7. 802.15.4_MAC_RFDNBNS_S08QE128.Lib<br /></blockquote></p><p>
          Below you can find the list of all 7 available MAC libraries for MC1323x: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD_S08QE128.Lib<br />
                 2. 802.15.4_MAC_FFDNB_S08MC1323x.Lib<br /> 
                 3. 802.15.4_MAC_FFDNBNS_S08MC1323x.Lib<br />
                 4. 802.15.4_MAC_FFDNGTS_S08MC1323x.Lib<br />
                 5. 802.15.4_MAC_RFD_S08MC1323x.Lib<br />
                 6. 802.15.4_MAC_RFDNB_S08MC1323x.Lib<br />
                 7. 802.15.4_MAC_RFDNBNS_S08MC1323x.Lib<br /></blockquote></p></temp:description>
          <mac:properties>
            <mac:DeviceType displayName="Device type">
              <temp:description>
               This property selects the device type. The possible values are: 
                <blockquote><b>Full Function Device</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.<br /><br /><b>Full Function Device, No Beacon</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Beacon property indicates that the application can participate in non beaconed networks.<br /><br /><b>Full Function Device, No Beacon, No Security</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Beacon property indicates that the application can participate in non beaconed networks. The No Security property indicates that the data packet transmitted over the air will not be encrypted.<br /><br /><b>Full Function Device, No Beacon, No Guaranteed Time Slots</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Guaranteed Time Slots property indicates that the application can not allocate Guaranteed Time Slots.<br /><br /><b>Reduced Function device</b> - It can be used in applications that require device functionality only.That is, end-devices with no child devices.<br /><br /><b>Reduced Function device, No Beacon</b> - It can be used in applications that require device functionality only.That is, end-devices with no child devices. The No Beacon property indicates that the application can participate in non beaconed networks.<br /><br /><b>Reduced Function device, No Beacon, No Security</b> -  It can be used in applications that require device functionality only.That is, end-devices with no child devices.The No Beacon property indicates that the application can participate in non beaconed networks. The No Security property indicates that the data packet transmitted over the air will not be encrypted.<br /><br /></blockquote><br /><b>If this property is modified after an export of the project in which it resides,  then the project should be exported again.</b></temp:description>
              <mac:value>Full Function Device</mac:value>
            </mac:DeviceType>
            <mac:Version displayName="IEEE 802.15.4 Standard Version">
              <temp:description>Select MAC IEEE 802.15.4 Standard Version<br />
      Select beween MAC 2003 and MAC 2006 IEEE 802.15.4 Standard versions.
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
      </temp:description>
              <mac:value>MAC-2006</mac:value>
            </mac:Version>
          </mac:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\Interface\AppAspInterface.h" destination=".\MacPhy\Interface\AppAspInterface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\FunctionalityDefines.h" destination=".\MacPhy\Interface\FunctionalityDefines.h" />
            <temp:file version="1.0" source=".\Generic\Interface\ASM_Interface.h" destination=".\MacPhy\Interface\ASM_Interface.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhy.h" destination=".\MacPhy\Interface\MacPhy.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyDebug.h" destination=".\MacPhy\Interface\MacPhyDebug.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyFLib.h" destination=".\MacPhy\Interface\MacPhyFLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyGlobalHdr.h" destination=".\MacPhy\Interface\MacPhyGlobalHdr.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyInit.h" destination=".\MacPhy\Interface\MacPhyInit.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyMC1323X.h" destination=".\MacPhy\Interface\MacPhyMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xHandler.h" destination=".\MacPhy\Interface\Mc1319xHandler.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1323xHandler.h" destination=".\MacPhy\Interface\Mc1323xHandler.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\MsgSystem.h" destination=".\MacPhy\Interface\MsgSystem.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MsgSystemDbg.h" destination=".\MacPhy\Interface\MsgSystemDbg.h" />
            <temp:file version="1.0" source=".\Generic\Interface\NwkMacInterface.h" destination=".\MacPhy\Interface\NwkMacInterface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PhyMacMsg.h" destination=".\MacPhy\Interface\PhyMacMsg.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PublicConst.h" destination=".\MacPhy\Interface\PublicConst.h" />
            <temp:file version="1.0" source=".\Generic\Interface\SecurityLib.h" destination=".\MacPhy\Interface\SecurityLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Telec.h" destination=".\MacPhy\Interface\Telec.h" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\Phy.h" destination=".\MacPhy\Phy\Interface\Phy.h" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\Eof.c" destination=".\MacPhy\Phy\Isr\Eof.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\Mc1319xHandler.c" destination=".\MacPhy\Phy\Isr\Mc1319xHandler.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\StreamIsr.c" destination=".\MacPhy\Phy\Isr\StreamIsr.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\CcaEd.c" destination=".\MacPhy\Phy\Primitives\CcaEd.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\Data.c" destination=".\MacPhy\Phy\Primitives\Data.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\GetSet.c" destination=".\MacPhy\Phy\Primitives\GetSet.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\SetRxTxState.c" destination=".\MacPhy\Phy\Primitives\SetRxTxState.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\PhyMain.c" destination=".\MacPhy\Phy\PhyMain.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\PhyMC1323X.h" destination=".\MacPhy\Phy\Interface\PhyMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\PhyDebugMC1323X.h" destination=".\MacPhy\Phy\Interface\PhyDebugMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyISR.c" destination=".\MacPhy\Phy\MC1323X\PhyISR.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyPacketProcessor.c" destination=".\MacPhy\Phy\MC1323X\PhyPacketProcessor.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyPlmeData.c" destination=".\MacPhy\Phy\MC1323X\PhyPlmeData.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyTime.c" destination=".\MacPhy\Phy\MC1323X\PhyTime.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                                                  (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                                                  (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
          </temp:files>
          <temp:components>
            <MacApps:component displayName="MacApps" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MacApps="http://freescale.com/ns/beekit/MacApps" xmlns="http://freescale.com/ns/beekit/MacApps" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MacApps Component.xsd">
              <temp:description>The MacApps are integrated into the CodeBase as templates. This deliverable is source code, and can be used as example code. 
  With its help, the user can easily create applications on top of the MAC layer. It is important to know that the MacApps source code is 
  as hardware (and MCU) independent as possible. This makes it possible to make new hardware targets and even change Platform (MCU) with 
  a minimal effort. </temp:description>
              <temp:files>
                <temp:file version="1.0" source=".\makefile.init" destination=".\makefile.init" />
                <temp:file version="1.0" source=".\Generic\Init\MApp_init.c" destination=".\Application\Init\MApp_init.c" />
                <temp:file version="1.0" source=".\Generic\Init\MApp_init.h" destination=".\Application\Init\MApp_init.h" />
                <temp:file version="1.0" source=".\Generic\Init\MacInit.c" destination=".\Application\Init\MacInit.c" />
                <temp:file version="1.0" source=".\Generic\Init\MacInit.h" destination=".\Application\Init\MacInit.h" />
                <temp:file version="1.0" source=".\Generic\Interface\802_15_4.h" destination=".\Application\Interface\802_15_4.h" />
                <temp:file version="1.0" source=".\Generic\Interface\Mac_Globals.h" destination=".\Application\Interface\Mac_Globals.h" />
                <temp:file version="1.0" source=".\Generic\Interface\MacTaskTbl.h" destination=".\Application\Interface\MacTaskTbl.h" />
                <temp:file version="1.0" source=".\Generic\Configure\GlobalVars.c" destination=".\Application\Configure\GlobalVars.c" />
                <temp:file version="1.0" source=".\Generic\Configure\ApplicationConf.h" destination=".\Application\Configure\ApplicationConf.h">
                  <temp:description />
                  <MacApps:properties>
                    <MacApps:Channel displayName="Channel" editor="ChannelEditor">
                      <temp:description>
            Default value of the channel(s) in which the device is willing to operate.
            This is used when starting up the network.<br />
            The value is a bit mask, each bit representing a channel. For the 2.4 GHz band
            only channels 11 to 26 are allowed. In order to select multiple channels, the bitwise OR  operation is performed on the selected channels values.<br /> 
            Based on the selection criteria one of the channels will be chosen and the device will run only on this
            one channel.<br /><table border="1" width="17%"><tr><td width="61" bgcolor="#C0C0C0"><font size="1">Channel</font></td><td bgcolor="#C0C0C0"><font size="1">Value</font></td></tr><tr><td width="61"><font size="1">11</font></td><td><font size="1">0x00000800</font></td></tr><tr><td width="61"><font size="1">12</font></td><td><font size="1">0x00001000</font></td></tr><tr><td width="61"><font size="1">13</font></td><td><font size="1">0x00002000</font></td></tr><tr><td width="61"><font size="1">14</font></td><td><font size="1">0x00004000</font></td></tr><tr><td width="61"><font size="1">15</font></td><td><font size="1">0x00008000</font></td></tr><tr><td width="61"><font size="1">16</font></td><td><font size="1">0x00010000</font></td></tr><tr><td width="61"><font size="1">17</font></td><td><font size="1">0x00020000</font></td></tr><tr><td width="61"><font size="1">18</font></td><td><font size="1">0x00040000</font></td></tr><tr><td width="61"><font size="1">19</font></td><td><font size="1">0x00080000</font></td></tr><tr><td width="61"><font size="1">20</font></td><td><font size="1">0x00100000</font></td></tr><tr><td width="61"><font size="1">21</font></td><td><font size="1">0x00200000</font></td></tr><tr><td width="61"><font size="1">22</font></td><td><font size="1">0x00400000</font></td></tr><tr><td width="61"><font size="1">23</font></td><td><font size="1">0x00800000</font></td></tr><tr><td width="61"><font size="1">24</font></td><td><font size="1">0x01000000</font></td></tr><tr><td width="61"><font size="1">25</font></td><td><font size="1">0x02000000</font></td></tr><tr><td width="61"><font size="1">26</font></td><td><font size="1">0x04000000</font></td></tr></table></temp:description>
                      <temp:regExLib name="define" param1="mDefaultValueOfChannel_c" />
                      <temp:format base="hex" />
                      <MacApps:value>16777216</MacApps:value>
                    </MacApps:Channel>
                    <MacApps:ExtendedAddress displayName="Extended address" editor="BeeKitBigEndianHexEditorV02">
                      <temp:description>
            The extended address to be assigned to the device. Each device must have a unique address.<br />
            
            This property must be entered in Little Endian byte order.

            <br />For example, if the Address found on the boards is shown as eg. MAC: 0x 00 50 C2 37 B0 04 05 A9 then the Extended address property must be entered as: 0xA9,0x05,0x04,0xB0,0x37,0xC2,0x50,0x00. 
          </temp:description>
                      <temp:regExLib name="define" param1="mDefaultValueOfExtendedAddress_c" />
                      <MacApps:value>0xC4,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF</MacApps:value>
                    </MacApps:ExtendedAddress>
                    <MacApps:LPMIncluded displayName="Low power mode enabled">
                      <temp:description>
            This property defines whether or not the LPM (Low Power Module) will be included in the application.
          </temp:description>
                      <temp:regExLib name="define" param1="gLpmIncluded_d" />
                      <MacApps:value>false</MacApps:value>
                    </MacApps:LPMIncluded>
                  </MacApps:properties>
                </temp:file>
                <temp:file version="1.0" source=".\Generic\Configure\AppToMacPhyConfig.h" destination=".\Application\Configure\AppToMacPhyConfig.h" />
                <temp:file version="1.0" source=".\Generic\Configure\AppToPlatformConfig.h" destination=".\Application\Configure\AppToPlatformConfig.h" />
              </temp:files>
              <temp:components>
                <MyWirelessApp:component displayName="MyWirelessApp" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MyWirelessApp="http://freescale.com/ns/beekit/MyWirelessApp" xmlns="http://freescale.com/ns/beekit/MyWirelessApp" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MyWirelessApp Component.xsd">
                  <temp:description>    
     
    The demo applications are presented below:<br /><blockquote>
    	MyWirelessAppDemoFramework             - Initialization and main loop.<br /> 
    	MyWirelessAppDemoNonBeaconCoordinator  - Coordinator sends indirect data to device.<br />
    	MyWirelessAppDemoNonBeaconEndDevice    - Device polls for data from the coordinator.<br />
    	MyWirelessAppDemoBeaconCoordinator     - Coordinator starts a beaconed network.<br />
    	MyWirelessAppDemoBeaconEndDevice       - Device receives data using automatic polling.<br />
    	MyWirelessAppDemoSecurityCoordinator   - Coordinator uses security.<br />
    	MyWirelessAppDemoSecurityEndDevice     - Device uses security.<br /></blockquote><p>
    	MyWirelessAppDemoFramework application is the first in a series of demo applications. The purpose of the series is to demonstrate how the features of the 802.15.4 stack can be used to create a simple point to point network. We will end up with two applications: 
    	<blockquote>
    	1) A device which is able to discover a PAN coordinator, associate to it, and transmit/receive data.<br /> 
    	2) A coordinator which is able to start a network (PAN), accept associations from devices, and transmit/receive data. <br /></blockquote></p><p>
    Throughout this series of applications the included UART module is used for printing out status messages to the RS232 console. The serial port on your PC must be configured to 8 data bits, 1 stop bit and no parity. The Baud Rate is user selectable. <br /></p></temp:description>
                  <temp:components>
                    <MyWirelessAppEx06a:component displayName="MyWirelessAppDemoNonBeaconCoordinator" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MyWirelessAppEx06a="http://freescale.com/ns/beekit/MyWirelessAppEx06a" xmlns="http://freescale.com/ns/beekit/MyWirelessAppEx06a" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MyWirelessAppEx06a Component.xsd">
                      <temp:description>    
     
    The demo applications are presented below:<br /><blockquote>
    	MyWirelessAppDemoFramework             - Initialization and main loop.<br /> 
    	MyWirelessAppDemoNonBeaconCoordinator  - Coordinator sends indirect data to device. == This Application ==<br />
    	MyWirelessAppDemoNonBeaconEndDevice    - Device polls for data from the coordinator.<br />
    	MyWirelessAppDemoBeaconCoordinator     - Coordinator starts a beaconed network.<br />
    	MyWirelessAppDemoBeaconEndDevice       - Device receives data using automatic polling.<br />
    	MyWirelessAppDemoSecurityCoordinator   - Coordinator uses security.<br />
    	MyWirelessAppDemoSecurityEndDevice     - Device uses security.<br /></blockquote><p>
    	This example will demonstrate indirect data transfer from the coordinator to the  device. Data sent to the device is not transmitted immediately but put into  a queue in the MAC. 
       Here it resides until the device sends a poll request. The poll request is initiated by the network or application layer on the device.
       To test the data transfer from the coordinator to the device, both should be connected to a PC with a RS232 terminal. 
       When sending an ASCII file (send as text) from the terminal of the coordinator, the file will be  printed to the terminal connected to the device. 
       It resembles a bidirectional  wireless RS232 cable replacement (though, without error checking and flow control in this simple example).

    </p><p>
    Throughout this series of applications the included UART module is used for printing out status messages to the RS232 console. The serial port on your PC must be configured to 8 data bits, 1 stop bit and no parity. The Baud Rate is user selectable.
    </p></temp:description>
                      <temp:files>
                        <temp:file version="1.0" source=".\Source\MApp.c" destination=".\Application\Source\MApp.c" />
                        <temp:file version="1.0" source=".\Source\MApp.h" destination=".\Application\Source\MApp.h">
                          <temp:description />
                          <MyWirelessAppEx06a:properties>
                            <MyWirelessAppEx06a:mDefaultValueOfShortAddress_c displayName="Short address" editor="BeeKitNativeBigEndianHexEditorV02">
                              <temp:description>
            This property specifies the default value for the short address of the coordinator. It can be set to any value in the range 0x0000 - 0xFFFD.<br />
            Note: A value of 0xFFFE can not be used because it is sent to a device that has associated but has not been allocated an address.<br />
            Note: A value of 0xFFFF can not be used because it indicates that the node short address is not initialized.
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfShortAddress_c" />
                              <temp:format base="hex" />
                              <MyWirelessAppEx06a:value>51966</MyWirelessAppEx06a:value>
                            </MyWirelessAppEx06a:mDefaultValueOfShortAddress_c>
                            <MyWirelessAppEx06a:mDefaultValueOfPanId_c displayName="PAN ID" editor="BeeKitNativeBigEndianHexEditorV02">
                              <temp:description>
            This property specifies the default value for the PAN ID of the coordinator. It can be set to any value in the range of 0x0000 - 0xFFFE.<br />
            Note: A value of 0xFFFF can not be used because it indicates that a device is not associated.
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfPanId_c" />
                              <temp:format base="hex" />
                              <MyWirelessAppEx06a:value>48879</MyWirelessAppEx06a:value>
                            </MyWirelessAppEx06a:mDefaultValueOfPanId_c>
                            <MyWirelessAppEx06a:MaxPackets displayName="Maximum number of pending data packets">
                              <temp:description>
            This property specifies the default number of data packets that can remain in the indirect queue of the coordinator. This can be adjusted based on application needs. It can be any value in the range of 1 to 4. 
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfMaxPendingDataPackets_c" />
                              <MyWirelessAppEx06a:value>2</MyWirelessAppEx06a:value>
                            </MyWirelessAppEx06a:MaxPackets>
                          </MyWirelessAppEx06a:properties>
                        </temp:file>
                      </temp:files>
                      <temp:components />
                    </MyWirelessAppEx06a:component>
                  </temp:components>
                </MyWirelessApp:component>
              </temp:components>
            </MacApps:component>
          </temp:components>
        </mac:component>
        <plm:component displayName="Platform" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:plm="http://freescale.com/ns/beekit/plm" xmlns="http://freescale.com/ns/beekit/plm">
          <temp:description>The BeeKit software packet is intended to work on current and future hardware and MCU platforms. This is made possible by isolating application software (MacApps) and MAC as much as possible from the hardware. This is accomplished by calling hardware dependant functions in the Platform software (PLM) in contrast to using macros and defines all around in the code.</temp:description>
          <plm:properties>
            <plm:Target displayName="Target hardware">
              <temp:description>Select HCS08 target hardware<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>MC1323x-REM</plm:value>
            </plm:Target>
            <plm:Processor displayName="Target Processor">
              <temp:description>Select target HCS08 processor<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>MC13234C</plm:value>
            </plm:Processor>
            <plm:UseBootloader displayName="Use Bootloader">
              <temp:description>Enable the use of the bootloader. Required for OTAP Client Demo Application.<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>false</plm:value>
            </plm:UseBootloader>
            <plm:EnableOTAPSupport displayName="Enable OTAP Support">
              <temp:description>Enables Over The Air Programming Support. Required for OTAP Client and Server Applications.<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>false</plm:value>
            </plm:EnableOTAPSupport>
          </plm:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\Interface\Bootloader.h" destination=".\PLM\Interface\Bootloader.h" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Bootloader.c" destination=".\PLM\Source\Bootloader\Bootloader.c" includeCondition=" (//plm:UseBootloader/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_Generic.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_Generic.c" includeCondition=" ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot.h" destination=".\PLM\Source\Bootloader\Eeprom_Boot.h" includeCondition=" (//plm:UseBootloader/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT45DB021D.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT45DB021D.c" includeCondition=" (((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF')) and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT25HP512C1.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT25HP512C1.c" includeCondition=" (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT24C1024BW.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT24C1024BW.c" includeCondition=" ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\NV_Utils.c" destination=".\PLM\Source\Bootloader\NV_Utils.c" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\NV_Utils.h" destination=".\PLM\Source\Bootloader\NV_Utils.h" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Eeprom.h" destination=".\PLM\Interface\Eeprom.h" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\OtapSupport.h" destination=".\PLM\Interface\OtapSupport.h" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT45DB021D.c" destination=".\PLM\Source\Eeprom\Eeprom_AT45DB021D.c" includeCondition=" (((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF')) and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT25HP512C1.c" destination=".\PLM\Source\Eeprom\Eeprom_AT25HP512C1.c" includeCondition=" (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT24C1024BW.c" destination=".\PLM\Source\Eeprom\Eeprom_AT24C1024BW.c" includeCondition=" ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\OtapSupport.c" destination=".\PLM\Source\Eeprom\OtapSupport.c" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\ACC_Interface.h" destination=".\PLM\Interface\ACC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gAccelerometerSupported_d displayName="Accelerometer module enabled">
                  <temp:description>
                    This parameter enables or disables the complete Accelerometer module. If set to True, the Accelerometer module is enabled and if set to False
                    the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gAccelerometerSupported_d" />
                  <plm:value>false</plm:value>
                </plm:gAccelerometerSupported_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\Accelerometer\Accelerometer.c" destination=".\PLM\Source\Accelerometer\Accelerometer.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Accelerometer\Accelerometer.h" destination=".\PLM\Source\Accelerometer\Accelerometer.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\ADC_Interface.h" destination=".\PLM\Interface\ADC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gADC_Enabled_d displayName="ADC module enabled">
                  <temp:description>
                    This parameter enables or disables the complete ADC module. If set to True, the ADC module is enabled and if set to False
                    the complete module is disabled. Currently the ADC module is only suported on the MC13237C and MC9S08QE128 targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gADC_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gADC_Enabled_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\ADC\ADC.c" destination=".\PLM\Source\ADC\ADC.c" includeCondition=" ((//plm:Processor/plm:value = 'MC13237C') or (//plm:Processor/plm:value = 'MC9S08QE128'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\ADC\ADC.h" destination=".\PLM\Source\ADC\ADC.h" includeCondition=" ((//plm:Processor/plm:value = 'MC13237C') or (//plm:Processor/plm:value = 'MC9S08QE128'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\CMT_Interface.h" destination=".\PLM\Interface\CMT_Interface.h" includeCondition=" ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C'))" copyInProject="includeCondition">
              <temp:description />
              <plm:properties>
                <plm:gCmtIncluded_d displayName="CMT module enabled">
                  <temp:description>
            This parameter enables or disables the CMT module. If set to True, the CMT module is enabled and if set to False
            the module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gCmtIncluded_d>
                <plm:gCmtDefaultCarrierFrequency_c displayName="CMT default carrier frequency">
                  <temp:description>
            This parameter sets the CMT default Carrier frequency in Hz
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultCarrierFrequency_c" />
                  <plm:value>38000</plm:value>
                </plm:gCmtDefaultCarrierFrequency_c>
                <plm:gCmtDefaultCarrierDutyCycle_c displayName="CMT default carrier duty cycle">
                  <temp:description>
            This parameter sets the CMT default Carrier duty cycle in %
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultCarrierDutyCycle_c" />
                  <plm:value>33</plm:value>
                </plm:gCmtDefaultCarrierDutyCycle_c>
                <plm:gCmtDefaultLog0MarkInMicros_c displayName="CMT default Mark 0 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default MARK duration in microseconds for the Logical 0 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog0MarkInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog0MarkInMicros_c>
                <plm:gCmtDefaultLog0SpaceInMicros_c displayName="CMT default Space 0 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default SPACE duration in microseconds for the Logical 0 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog0SpaceInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog0SpaceInMicros_c>
                <plm:gCmtDefaultLog1MarkInMicros_c displayName="CMT default Mark 1 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default MARK duration in microseconds for the Logical 1 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog1MarkInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog1MarkInMicros_c>
                <plm:gCmtDefaultLog1SpaceInMicros_c displayName="CMT default Space 1 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default SPACE duration in microseconds for the Logical 1 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog1SpaceInMicros_c" />
                  <plm:value>1690</plm:value>
                </plm:gCmtDefaultLog1SpaceInMicros_c>
                <plm:gCmtLsbFirstDefault_c displayName="CMT default bit shifting method LSB first or MSB first">
                  <temp:description>
            This parameter sets the CMT default shifting method: LSB firts or MSB first.
            Setting this parameter to TRUE will configure the CMT to shift bits as LSB first, 
            while setting this parameter to FALSE will configure the CMT to shift bits as MSB first
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtLsbFirstDefault_c" />
                  <plm:value>true</plm:value>
                </plm:gCmtLsbFirstDefault_c>
                <plm:gCmtTimeOperModeDefault_c displayName="CMT default bit operating mode: Time Mode or Baseband Mode">
                  <temp:description>
            This parameter sets the CMT default operating mode: Time Mode or Baseband Mode.
            Setting this parameter to TRUE will configure the CMT in Time Mode, 
            while setting this parameter to FALSE will configure the CMT in Baseband Mode.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtTimeOperModeDefault_c" />
                  <plm:value>true</plm:value>
                </plm:gCmtTimeOperModeDefault_c>
                <plm:gCmtOutputPolarityDefault_c displayName="CMT default output polarity">
                  <temp:description>
            This parameter sets the CMT ouput polarity: IRO active low or IRO active high.
            Setting this parameter to TRUE will configure the IRO pin to be active high, 
            while setting this parameter to FALSE will configure the IRO pin to be active low.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtOutputPolarityDefault_c" />
                  <plm:value>false</plm:value>
                </plm:gCmtOutputPolarityDefault_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Debug.h" destination=".\PLM\Interface\Debug.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Display.h" destination=".\PLM\Interface\Display.h">
              <temp:description />
              <plm:properties>
                <plm:gLCDSupported_d displayName="Display module enabled">
                  <temp:description>
              This parameter enables or disables the complete Display module. If set to True, the Display module is enabled and if set to False
              the complete module is disabled. Currently this property will only have effect on MC1321x-NCB, MC1320x-S08QE128-EVB and MC1323x-RCM targets.
            </temp:description>
                  <temp:regExLib name="define" param1="gLCDSupported_d" />
                  <plm:value>false</plm:value>
                </plm:gLCDSupported_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\EmbeddedTypes.h" destination=".\PLM\Interface\EmbeddedTypes.h" />
            <temp:file version="1.0" source=".\Generic\Interface\FunctionLib.h" destination=".\PLM\Interface\FunctionLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IIC_Interface.h" destination=".\PLM\Interface\IIC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gIIC_Enabled_d displayName="IIC module enabled">
                  <temp:description>
                        This parameter enables or disables the IIC module. If set to True the IIC module is enabled. If set to False the IIC module is disabled.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gIIC_Enabled_d>
                <plm:gIIC_DefaultBaudRate_c displayName="IIC default Baud Rate">
                  <temp:description>
                        This property defines the Baud Rate used for sending and receiving data over IIC.<br /></temp:description>
                  <temp:regExLib name="define" param1="gIIC_DefaultBaudRate_c" />
                  <plm:value>gIIC_BaudRate_100000_c</plm:value>
                </plm:gIIC_DefaultBaudRate_c>
                <plm:gIIC_SlaveTransmitBuffersNo_c displayName="IIC slave transmit buffers">
                  <temp:description>
                        The number of entries in the transmit-buffers-in-waiting list when the IIC is used in slave mode.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_SlaveTransmitBuffersNo_c" />
                  <plm:value>3</plm:value>
                </plm:gIIC_SlaveTransmitBuffersNo_c>
                <plm:gIIC_SlaveReceiveBufferSize_c displayName="IIC slave receive buffer Size">
                  <temp:description>
                        Size of the driver's Rx circular buffer when used in slave mode. This buffer is used to	hold the received bytes until the application can retrieve them via the	IIC_GetByteFromRxBuffer() function, and are not otherwise accessible from outside the driver.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_SlaveReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:gIIC_SlaveReceiveBufferSize_c>
                <plm:gIIC_SlaveAddress_c displayName="IIC slave address">
                  <temp:description>
                        Address of the IIC module when used in slave mode.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_DefaultSlaveAddress_c" />
                  <plm:value>0x10</plm:value>
                </plm:gIIC_SlaveAddress_c>
                <plm:gIIC_SlaveTxDataAvailableSignalEnabled_c displayName="IIC in slave mode signals host when data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode.<br />
                        Specifies whether or not the host processor will be signaled when the local IIC module has information to send.<br />
                        After being signaled, the host processor should address the local IIC module as a slave device and read the available information from.<br /><br />
                        In case when this property is enabled, the host processor is signaled through a GPIO that can be configured with the help of the properties below.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_Slave_TxDataAvailableSignal_Enable_c" />
                  <plm:value>false</plm:value>
                </plm:gIIC_SlaveTxDataAvailableSignalEnabled_c>
                <plm:gIIC_SignalTxDataAvailablePortData_c displayName="Data port for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the local data port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePortDataReg_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortData_c>
                <plm:gIIC_SignalTxDataAvailablePortDirection_c displayName="Direction port for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the local data direction port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePortDDirReg_c" />
                  <plm:value>PTADD</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortDirection_c>
                <plm:gIIC_SignalTxDataAvailablePortPin_c displayName="Port pin mask for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the mask of the pin on the local port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePinMask_c" />
                  <plm:value>0x02</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortPin_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\IoConfig.h" destination=".\PLM\Interface\IoConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigS08.h" destination=".\PLM\Interface\IoConfigS08.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigS08QE128.h" destination=".\PLM\Interface\IoConfigS08QE128.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigMC1323x.h" destination=".\PLM\Interface\IoConfigMC1323x.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\SPI_Interface.h" destination=".\PLM\Interface\SPI_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gSPI_Enabled_d displayName="SPI module enabled">
                  <temp:description>
                    This parameter enables or disables the complete SPI module. If set to True, the SPI module is enabled and if set to False
                    the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gSPI_Enabled_d>
                <plm:gSPI_Slave_TxDataAvailableSignal_Enable_c displayName="SPI slave tx data available signal">
                  <temp:description>
                    Slave transmitter can signal to the master if there's data available
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_Slave_TxDataAvailableSignal_Enable_c" />
                  <plm:value>false</plm:value>
                </plm:gSPI_Slave_TxDataAvailableSignal_Enable_c>
                <plm:gSPI_AutomaticSsPinAssertion_c displayName="SPI automatic SS output assertion">
                  <temp:description>
                    SPI automatic SS output assertion.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_AutomaticSsPinAssertion_c" />
                  <plm:value>true</plm:value>
                </plm:gSPI_AutomaticSsPinAssertion_c>
                <plm:gSPI_SlaveTransmitBuffersNo_c displayName="SPI Slave - Number of Tx buffers">
                  <temp:description>
                    The number of entries in the transmit-buffers-in-waiting list when the SPI is used in slave mode.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_SlaveTransmitBuffersNo_c" />
                  <plm:value>3</plm:value>
                </plm:gSPI_SlaveTransmitBuffersNo_c>
                <plm:gSPI_SlaveReceiveBufferSize_c displayName="SPI Slave - Rx buffer size">
                  <temp:description>
                    Size of the driver's Rx circular buffer when used in slave mode. This buffer is used to hold the received bytes until the application can retrieve them via the SPI_GetByteFromBuffer() function, and are not otherwise accessible from outside the driver. 
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_SlaveReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:gSPI_SlaveReceiveBufferSize_c>
                <plm:gSPI_DefaultBaudRate_c displayName="SPI default Baud Rate">
                  <temp:description>
                    This property defines the Baud Rate used for sending and receiving data over SPI.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultBaudRate_c" />
                  <plm:value>gSPI_BaudRate_100000_c</plm:value>
                </plm:gSPI_DefaultBaudRate_c>
                <plm:gSPI_DefaultMode_c displayName="SPI Mode">
                  <temp:description>
                    SPI mode of operation: Master / Slave.<br />
                    The Master generates the clock signal.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultMode_c" />
                  <plm:value>gSPI_SlaveMode_c</plm:value>
                </plm:gSPI_DefaultMode_c>
                <plm:gSPI_DefaultBitwiseShfting_c displayName="SPI bitwise shifting">
                  <temp:description>
                    Normally, SPI data is transferred most significant bit (MSB) first.<br />
                    Selecting "gSPI_LsbFirst_c", the least significant bit first enable (LSBFE) bit is set, and  SPI data is shifted LSB first.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultBitwiseShfting_c" />
                  <plm:value>gSPI_MsbFirst_c</plm:value>
                </plm:gSPI_DefaultBitwiseShfting_c>
                <plm:gSPI_DefaultOperMode_c displayName="SPI bus mode">
                  <temp:description>
                    Full duplex - SPI uses separate pins for data input and data output.<br />
                    Single wire - SPI configured for single-wire bidirectional operation.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultOperMode_c" />
                  <plm:value>gSPI_FullDuplex_c</plm:value>
                </plm:gSPI_DefaultOperMode_c>
                <plm:gSPI_DefaultClockPol_c displayName="SPI CLK polarity">
                  <temp:description>
                    This setting effectively places an inverter in series with the clock signal from a master SPI or to a slave SPI device.<br />
                    SPI clock polarity: Active Low / Active High
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultClockPol_c" />
                  <plm:value>gSPI_ActiveHighPolarity_c</plm:value>
                </plm:gSPI_DefaultClockPol_c>
                <plm:gSPI_DefaultClockPhase_c displayName="SPI CLK phase">
                  <temp:description>
                    This setting selects one of two clock formats for different kinds of synchronous serial peripheral devices.<br />
                    SPI clock phase: Odd Edge Shifting / Even Edge Shifting
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultClockPhase_c" />
                  <plm:value>gSPI_EvenEdgeShifting_c</plm:value>
                </plm:gSPI_DefaultClockPhase_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Touchpad_Interface.h" destination=".\PLM\Interface\Touchpad_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gTouchpadIncluded_d displayName="Touchpad module enabled">
                  <temp:description>
            This parameter enables or disables the complete Touchpad module. If set to True, the Touchpad module is enabled and if set to False
            the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
          </temp:description>
                  <temp:regExLib name="define" param1="gTouchpadIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gTouchpadIncluded_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\IrqControlLib.h" destination=".\PLM\Interface\IrqControlLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Keyboard.h" destination=".\PLM\Interface\Keyboard.h">
              <temp:description />
              <plm:properties>
                <plm:gKeyBoardSupported_d displayName="Keyboard module enabled">
                  <temp:description>
            This parameter enables or disables the complete Keyboard module. If set to True, the Keyboard module is enabled and if set to False
            the complete module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyBoardSupported_d" />
                  <plm:value>true</plm:value>
                </plm:gKeyBoardSupported_d>
                <plm:gKeyEventNotificationMode_c displayName="Key Event notification mode">
                  <temp:description>
            This parameter selects the mode for keyboard events notfication. If this parameter is set to gKbdEventShortLongPressMode_c the events sent from keyboard module
            are: short press and long press. If this parameter is set to gKbdEventPressHoldReleaseMode_c the events sent from keyboard module are: press, hold and release.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyEventNotificationMode_c" />
                  <plm:value>gKbdEventShortLongPressMode_c</plm:value>
                </plm:gKeyEventNotificationMode_c>
                <plm:mKeySCAN_c displayName="Key Scan Interval">
                  <temp:description>
            A short key will be returned if a key is held down for this number of milliseconds. The default value of this property is 50 milliseconds.<br />
            Make sure this constant is long enough for debounce time.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyScanInterval_c" />
                  <plm:value>50</plm:value>
                </plm:mKeySCAN_c>
                <plm:mLongKeySCAN_c displayName="Long key press duration">
                  <temp:description>
            This parameter is valid if gKbdEventShortLongPressMode_c is selected.<br />
            A long key will be returned if the key is held down for at least (Long key press duration)*(Key Scan Interval)miliseconds.
            The default value of this property is 20.<br />
            Default period for a long key is: 20*50 = 1000 milliseconds or 1 second.
          </temp:description>
                  <temp:regExLib name="define" param1="gLongKeyIterations_c" />
                  <plm:value>20</plm:value>
                </plm:mLongKeySCAN_c>
                <plm:gFirstHoldDetectIterations_c displayName="First hold detection interval">
                  <temp:description>
            This parameter is valid if gKbdEventPressHoldReleaseMode_c is selected.<br />
            The first hold event for a key will be generated after (First hold detection interval)*(Key Scan Interval)miliseconds.
            The default value of this property is 6.<br />
            Default period for the first hold event is 6*50 = 300 miliseconds or 0.3 seconds.
          </temp:description>
                  <temp:regExLib name="define" param1="gFirstHoldDetectIterations_c" />
                  <plm:value>6</plm:value>
                </plm:gFirstHoldDetectIterations_c>
                <plm:gHoldDetectIterations_c displayName="Hold detection interval">
                  <temp:description>
            This parameter is valid if gKbdEventPressHoldReleaseMode_c is selected.<br />
            After the first hold event for a key the hold events will be generated at each (Hold detection interval)*(Key Scan Interval)miliseconds.
            The default value of this property is 6.<br />
            Default period between the hold events is 6*50 = 300 miliseconds or 0.3 seconds.
          </temp:description>
                  <temp:regExLib name="define" param1="gHoldDetectIterations_c" />
                  <plm:value>6</plm:value>
                </plm:gHoldDetectIterations_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Led.h" destination=".\PLM\Interface\Led.h">
              <temp:description />
              <plm:properties>
                <plm:gLEDSupported_d displayName="LED module enabled">
                  <temp:description>
            This parameter enables or disables the complete LED module. If set to True, the LED module is enabled and if set to False
            the module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gLEDSupported_d" />
                  <plm:value>true</plm:value>
                </plm:gLEDSupported_d>
                <plm:LEDBlip displayName="LED blip enabled">
                  <temp:description>
            This parameter enables or disables the LED blip (short blink) in the LED module.
          </temp:description>
                  <temp:regExLib name="define" param1="gLEDBlipEnabled_d" />
                  <plm:value>false</plm:value>
                </plm:LEDBlip>
                <plm:mLEDInterval_c displayName="Flash interval">
                  <temp:description>
            Interval time for toggling the LED which is used for flashing. The flashing duty cycle is 50%. The unit is milliseconds and the allowed range is 0-262140 ms.
          </temp:description>
                  <temp:regExLib name="define" param1="mLEDInterval_c" />
                  <plm:value>100</plm:value>
                </plm:mLEDInterval_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1319xEVBSARD.h" destination=".\PLM\Interface\Led_MC1319xEVBSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1319xGB60.h" destination=".\PLM\Interface\Led_MC1319xGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1321xNCBSRB.h" destination=".\PLM\Interface\Led_MC1321xNCBSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\LM61B.h" destination=".\PLM\Interface\LM61B.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyPlatformLib.h" destination=".\PLM\Interface\MacPhyPlatformLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xDrv.h" destination=".\PLM\Interface\Mc1319xDrv.h" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xReg.h" destination=".\PLM\Interface\Mc1319xReg.h" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\NV_Data.h" destination=".\PLM\Interface\NV_Data.h">
              <temp:description />
              <plm:properties>
                <plm:gaMC1323x_CCA_Threshold_c displayName="MC1323x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1323x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1323x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1323x_CCA_Threshold_c>
                <plm:gaMC1323x_CCA_Offset_c displayName="MC1323x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1323x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1323x_CCA_Offset_c" />
                  <plm:value>0xA5</plm:value>
                </plm:gaMC1323x_CCA_Offset_c>
                <plm:gaMC1321x_CCA_Threshold_c displayName="MC1321x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1321x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1321x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1321x_CCA_Threshold_c>
                <plm:gaMC1321x_CCA_Offset_c displayName="MC1321x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1321x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1321x_CCA_Offset_c" />
                  <plm:value>0x9B</plm:value>
                </plm:gaMC1321x_CCA_Offset_c>
                <plm:gaMC1319x_CCA_Threshold_c displayName="MC1319x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1319x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1319x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1319x_CCA_Threshold_c>
                <plm:gaMC1319x_CCA_Offset_c displayName="MC1319x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1319x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1319x_CCA_Offset_c" />
                  <plm:value>0x9B</plm:value>
                </plm:gaMC1319x_CCA_Offset_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\NVM_Interface.h" destination=".\PLM\Interface\NVM_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gNvStorageIncluded_d displayName="NVM storage enabled">
                  <temp:description>
            This parameter enables or disables the complete NVM module. If set to True, the NVM module is enabled and if set to False
            the module is disabled.
          </temp:description>
                  <temp:regExLib name="define" param1="gNvStorageIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gNvStorageIncluded_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PlatformToMacPhyConfig.h" destination=".\PLM\Interface\PlatformToMacPhyConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PlatformToMacPhyDbgConfig.h" destination=".\PLM\Interface\PlatformToMacPhyDbgConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PortConfig.h" destination=".\PLM\Interface\PortConfig.h">
              <temp:description />
              <plm:properties>
                <plm:gUserTransceiverType_d displayName="User defined transceiver type" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Type of the transceiver: MC1319x, MC1320x, MC1321x or MC1323x.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            <br />
            If transceiver type is set to MC1321x, and target is set to "User defined target configuration", then following default settings must be used:
            <br />
            - ATTN Port = Port D,  <br />
            - ATTN mask = Pin 0,  <br />
            - Rx/Tx_EN Port = Port D,  <br />
            - Rx/Tx_EN mask = Pin 1,   <br />
            - Transceiver Reset Port = Port D,  <br />
            - Transceiver Reset mask = Pin 3,  <br />
            - GPIO1/OUT_OF_IDLE Port = Port E,  <br />
            - GPIO1/OUT_OF_IDLE mask = Pin 7,   <br />
            - GPIO2/CRC_VALID Port = Port E,  <br />
            - GPIO2/CRC_VALID mask = Pin 1.     <br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUserTransceiverType_d" />
                  <plm:value>MC1321x</plm:value>
                </plm:gUserTransceiverType_d>
                <plm:UseExternalAntennaSwitch displayName="User defined internal or external Antenna switch configuration" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Select whether an external antenna switch should be used.<br />
            Note: is only applicable for MC1321x and MC1320x.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gUseExternalAntennaSwitch_c" />
                  <plm:value>true</plm:value>
                </plm:UseExternalAntennaSwitch>
                <plm:LED1_PORT displayName="LED 1 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED1_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED1_PORT>
                <plm:LED2_PORT displayName="LED 2 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED2_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED2_PORT>
                <plm:LED3_PORT displayName="LED 3 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 3.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED3_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED3_PORT>
                <plm:LED4_PORT displayName="LED 4 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 4.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED4_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED4_PORT>
                <plm:LED1_PIN displayName="LED 1 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 1 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED1_PIN" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:LED1_PIN>
                <plm:LED2_PIN displayName="LED 2 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 2 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED2_PIN" />
                  <temp:format base="hex" />
                  <plm:value>32</plm:value>
                </plm:LED2_PIN>
                <plm:LED3_PIN displayName="LED 3 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 3 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED3_PIN" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:LED3_PIN>
                <plm:LED4_PIN displayName="LED 4 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 4 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED4_PIN" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:LED4_PIN>
                <plm:LED5_PORT displayName="LED 5 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 5.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If the user defined target configuration has only 4 LEDs the value of this property will not be used.
          </temp:description>
                  <temp:regExLib name="define" param1="LED5_PORT" />
                  <plm:value>PTCD</plm:value>
                </plm:LED5_PORT>
                <plm:LED5_PIN displayName="LED 5 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 5 of the LED 5 Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If the user defined target configuration has only 4 LEDs the value of this property must be set to 0.
          </temp:description>
                  <temp:regExLib name="define" param1="LED5_PIN" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:LED5_PIN>
                <plm:PORT_PINS displayName="Debug Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the debug pins.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="PORT_PINS" />
                  <plm:value>PTAD</plm:value>
                </plm:PORT_PINS>
                <plm:PORT1_PIN displayName="First debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the first debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT1_PIN" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:PORT1_PIN>
                <plm:PORT2_PIN displayName="Second debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the second debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT2_PIN" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:PORT2_PIN>
                <plm:PORT3_PIN displayName="Third debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the third debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT3_PIN" />
                  <temp:format base="hex" />
                  <plm:value>4</plm:value>
                </plm:PORT3_PIN>
                <plm:PORT4_PIN displayName="Fourth debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the fourth debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT4_PIN" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:PORT4_PIN>
                <plm:SWITCH1_PORT displayName="Switch 1 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH1_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH1_PORT>
                <plm:SWITCH2_PORT displayName="Switch 2 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH2_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH2_PORT>
                <plm:SWITCH3_PORT displayName="Switch 3 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 3.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH3_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH3_PORT>
                <plm:SWITCH4_PORT displayName="Switch 4 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 4.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH4_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH4_PORT>
                <plm:mSWITCH1_MASK displayName="Switch 1 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW1 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            Note: On the S08QE128-EVB board, Switch 1 is the first push-button labeled SW2.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH1_MASK" />
                  <temp:format base="hex" />
                  <plm:value>4</plm:value>
                </plm:mSWITCH1_MASK>
                <plm:mSWITCH2_MASK displayName="Switch 2 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW2 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            Note: On the S08QE128-EVB board, Switch 2 is the second push-button labeled SW3.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH2_MASK" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:mSWITCH2_MASK>
                <plm:mSWITCH3_MASK displayName="Switch 3 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW3 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            Note: On the S08QE128-EVB board, Switch 3 is the third push-button labeled SW4.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH3_MASK" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:mSWITCH3_MASK>
                <plm:mSWITCH4_MASK displayName="Switch 4 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW2 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            Note: On the S08QE128-EVB board, Switch 4 is the last push-button labeled SW5.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH4_MASK" />
                  <temp:format base="hex" />
                  <plm:value>32</plm:value>
                </plm:mSWITCH4_MASK>
                <plm:gMC1319xAttnPort displayName="ATTN Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the ATTN signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAttnPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xAttnPort>
                <plm:gMC1319xAttnMask_c displayName="ATTN mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls ATTN of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAttnMask_c" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:gMC1319xAttnMask_c>
                <plm:gMC1319xRxTxPort displayName="Rx/Tx_EN Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Rx and Tx signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xRxTxPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xRxTxPort>
                <plm:gMC1319xRxTxMask_c displayName="Rx/Tx_EN mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls Rx/Tx signal of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xRxTxMask_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gMC1319xRxTxMask_c>
                <plm:gMC1319xResetPort displayName="Transceiver Reset Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Reset signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xResetPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xResetPort>
                <plm:gMC1319xResetMask_c displayName="Transceiver Reset mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the Reset pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xResetMask_c" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:gMC1319xResetMask_c>
                <plm:gMC1319xAntSwPort displayName="Antenna Switch Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Antenna Switch.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property will only have effect on the MC1319x transceiver.<br />
            If the transceiver type is MC1321x the value of this property will not be used.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAntSwPort" />
                  <plm:value>PTBD</plm:value>
                </plm:gMC1319xAntSwPort>
                <plm:gMC1319xAntSwMask_c displayName="Antenna Switch mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the Antenna Switch pin of the port.<br />
            This property will only have effect on the MC1319x transceiver.<br />
            If the transceiver type is MC1321x the value of this property must be set to 0.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAntSwMask_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gMC1319xAntSwMask_c>
                <plm:EnableLNA displayName="Enable Low Noise Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for enabling the Low Noise Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="EnableLNA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:EnableLNA>
                <plm:EnablePA displayName="Enable Power Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for enabling the Power Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="EnablePA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:EnablePA>
                <plm:DisableLNA displayName="Disable Low Noise Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for disabling the Low Noise Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="DisableLNA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:DisableLNA>
                <plm:DisablePA displayName="Disable Power Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for disabling the Power Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="DisablePA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:DisablePA>
                <plm:gMC1319xGPIO1Port displayName="GPIO1/OUT_OF_IDLE Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the GPIO 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO1Port" />
                  <plm:value>PTED</plm:value>
                </plm:gMC1319xGPIO1Port>
                <plm:gMC1319xGPIO1Mask_c displayName="GPIO1/OUT_OF_IDLE mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the GPIO1 pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO1Mask_c" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:gMC1319xGPIO1Mask_c>
                <plm:gMC1319xGPIO2Port displayName="GPIO2/CRC_VALID Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the GPIO 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO2Port" />
                  <plm:value>PTED</plm:value>
                </plm:gMC1319xGPIO2Port>
                <plm:gMC1319xGPIO2Mask_c displayName="GPIO2/CRC_VALID mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the GPIO2 pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO2Mask_c" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:gMC1319xGPIO2Mask_c>
                <plm:gSCI1RTSPort_c displayName="SCI 1 RTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 1 RTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1RTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI1RTSPort_c>
                <plm:gSCI1RTSPin_c displayName="SCI 1 RTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 1 RTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1RTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gSCI1RTSPin_c>
                <plm:gSCI1CTSPort_c displayName="SCI 1 CTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 1 CTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1CTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI1CTSPort_c>
                <plm:gSCI1CTSPin_c displayName="SCI 1 CTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 1 CTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1CTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:gSCI1CTSPin_c>
                <plm:gSCI2RTSPort_c displayName="SCI 2 RTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 2 RTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2RTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI2RTSPort_c>
                <plm:gSCI2RTSPin_c displayName="SCI 2 RTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 2 RTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2RTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:gSCI2RTSPin_c>
                <plm:gSCI2CTSPort_c displayName="SCI 2 CTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 2 CTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2CTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI2CTSPort_c>
                <plm:gSCI2CTSPin_c displayName="SCI 2 CTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 2 CTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2CTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:gSCI2CTSPin_c>
                <plm:gPTADValue_c displayName="Port A register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A data register (PTAD).<br />
            Writes  are latched into all bits of this register. For port A pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTAD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTADValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTADValue_c>
                <plm:gPTAPEValue_c displayName="Port A pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A pull-up enable register (PTAPE).<br />
            For port A pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled. <br />
            For port A pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 =Internal pullup device disabled  for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTAPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>60</plm:value>
                </plm:gPTAPEValue_c>
                <plm:gPTADDValue_c displayName="Port A data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A data direction register (PTADD).<br />
            These read/write bits control the direction of port A pins and what is read for PTAD reads.<br /><blockquote>
              1 = Output driver enabled for port A bit n and PTAD reads return the contents of PTADn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTADDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>66</plm:value>
                </plm:gPTADDValue_c>
                <plm:gPTADSValue_c displayName="Port A drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port A drive strength register(PTADH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTADSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port A Bits - Each of these control bits selects between low and high
            output drive for the associated PTA pin. For port A pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port A bit n.<br />
            1 High output drive strength selected for port A bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTADSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTADSValue_c>
                <plm:gPTBDValue_c displayName="Port B register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B data register (PTBD).<br />
            Writes  are latched into all bits of this register. For port B pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTBD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.   <br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDValue_c>
                <plm:gPTBPEValue_c displayName="Port B pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B pull-up enable register (PTBPE).<br />
            For port B pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled. <br />
            For port B pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 =Internal pullup device disabled  for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBPEValue_c>
                <plm:gPTBDDValue_c displayName="Port B data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B data direction register (PTBDD).<br />
            These read/write bits control the direction of port B pins and what is read for PTBD reads.<br /><blockquote>
              1 = Output driver enabled for port B bit n and PTBD reads return the contents of PTBDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.
            </blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDDValue_c>
                <plm:gPTBDSValue_c displayName="Port B drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port B drive strength register(PTBDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTBDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port B Bits - Each of these control bits selects between low and high
            output drive for the associated PTB pin. For port B pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port B bit n.<br />
            1 High output drive strength selected for port B bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTBDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDSValue_c>
                <plm:gPTCDValue_c displayName="Port C register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C data register (PTCD).<br />
            Writes are latched into all bits of this register. For port C pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTCD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If using MC1323x-REM, MC1323x-RCM or MC1323x-TWR-RF, Pin 1 of Port C must be set as output and must have logical value zero to be able to use switches 1 to 4.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCDValue_c>
                <plm:gPTCPEValue_c displayName="Port C pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C pull-up enable register (PTCPE).<br />
            For port C pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port C pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCPEValue_c>
                <plm:gPTCDDValue_c displayName="Port C data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C data direction register (PTCDD).<br />
            These read/write bits control the direction of port C pins and what is read for PTCD reads.<br /><blockquote>
              1 = Output driver enabled for port C bit n and PTCD reads return the contents of PTCDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If using MC1323x-REM, MC1323x-RCM or MC1323x-TWR-RF, Pin 1 of Port C must be set as output and must have logical value zero to be able to use switches 1 to 4.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:gPTCDDValue_c>
                <plm:gPTCDSValue_c displayName="Port C drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port C drive strength register(PTCDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTCDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port C Bits - Each of these control bits selects between low and high
            output drive for the associated PTC pin. For port C pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port C bit n.<br />
            1 High output drive strength selected for port C bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTCDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCDSValue_c>
                <plm:gPTDDValue_c displayName="Port D register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D data register (PTDD).<br />
            Writes are latched into all bits of this register. For port D pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTDD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gPTDDValue_c>
                <plm:gPTDPEValue_c displayName="Port D pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D pull-up enable register (PTDPE).<br />
            For port D pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port D pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTDPEValue_c>
                <plm:gPTDDDValue_c displayName="Port D data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D data direction register(PTDDD).<br />
            These read/write bits control the direction of port D pins and what is read for PTDD reads.<br /><blockquote>
              1 = Output driver enabled for port D bit n and PTDD reads return the contents of PTDDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>251</plm:value>
                </plm:gPTDDDValue_c>
                <plm:gPTDDSValue_c displayName="Port D drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port D drive strength register(PTDDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTDDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port D Bits - Each of these control bits selects between low and high
            output drive for the associated PTD pin. For port D pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port D bit n.<br />
            1 High output drive strength selected for port D bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTDDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTDDSValue_c>
                <plm:gPTEDValue_c displayName="Port E register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E data register (PTED).<br />
            Writes are latched into all bits of this register. For port E pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTED to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>20</plm:value>
                </plm:gPTEDValue_c>
                <plm:gPTEPEValue_c displayName="Port E pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E pull-up enable register (PTEPE).<br />
            For port E pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port E pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTEPEValue_c>
                <plm:gPTEDDValue_c displayName="Port E data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E data direction register (PTEDD).<br />
            These read/write bits control the direction of port E pins and what is read for PTED reads.<br /><blockquote>
              1 = Output driver enabled for port E bit n and PTED reads return the contents of PTEDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>255</plm:value>
                </plm:gPTEDDValue_c>
                <plm:gPTEDSValue_c displayName="Port E drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port E drive strength register(PTEDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTEDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port E Bits - Each of these control bits selects between low and high
            output drive for the associated PTE pin. For port E pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port E bit n.<br />
            1 High output drive strength selected for port E bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTEDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTEDSValue_c>
                <plm:gPTFDValue_c displayName="Port F register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F data register (PTFD).<br />
            Writes are latched into all bits of this register. For port F pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTFD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDValue_c>
                <plm:gPTFPEValue_c displayName="Port F pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F pull-up enable register (PTFPE).<br />
            For port F pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port F pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFPEValue_c>
                <plm:gPTFDDValue_c displayName="Port F data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F data direction register (PTFDD).<br />
            These read/write bits control the direction of port F pins and what is read for PTFD reads.<br /><blockquote>
              1 = Output driver enabled for port F bit n and PTFD reads return the contents of PTFDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDDValue_c>
                <plm:gPTFDSValue_c displayName="Port F drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port F drive strength register(PTFDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTFDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port F Bits - Each of these control bits selects between low and high
            output drive for the associated PTF pin. For port F pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port F bit n.<br />
            1 High output drive strength selected for port F bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTFDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDSValue_c>
                <plm:gPTGDValue_c displayName="Port G register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G data register (PTGD).<br />
            Writes are latched into all bits of this register. For port G pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTGD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDValue_c>
                <plm:gPTGPEValue_c displayName="Port G pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G pull-up enable register (PTGPE).<br />
            For port G pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port G pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGPEValue_c>
                <plm:gPTGDDValue_c displayName="Port G data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G data direction register (PTGDD).<br />
            These read/write bits control the direction of port G pins and what is read for PTGD reads.<br /><blockquote>
              1 = Output driver enabled for port G bit n and PTGD reads return the contents of PTGDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDDValue_c>
                <plm:gPTGDSValue_c displayName="Port G drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port G drive strength register(PTGDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTGDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port G Bits - Each of these control bits selects between low and high
            output drive for the associated PTG pin. For port G pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port G bit n.<br />
            1 High output drive strength selected for port G bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTGDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDSValue_c>
                <plm:gPTHDValue_c displayName="Port H register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H data register (PTHD).<br />
            Writes are latched into all bits of this register. For port H pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTGD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDValue_c>
                <plm:gPTHPEValue_c displayName="Port H pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H pull-up enable register (PTHPE).<br />
            For port H pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port H pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHPEValue_c>
                <plm:gPTHDDValue_c displayName="Port H data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H data direction register (PTHDD).<br />
            These read/write bits control the direction of port H pins and what is read for PTHD reads.<br /><blockquote>
              1 = Output driver enabled for port G bit n and PTHD reads return the contents of PTHDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDDValue_c>
                <plm:gPTHDSValue_c displayName="Port H drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port H drive strength register(PTHDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTHDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port H Bits - Each of these control bits selects between low and high
            output drive for the associated PTH pin. For port H pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port H bit n.<br />
            1 High output drive strength selected for port H bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTHDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDSValue_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PowerManager.h" destination=".\PLM\Interface\PowerManager.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PWR_Configuration.h" destination=".\PLM\Interface\PWR_Configuration.h">
              <temp:description />
              <plm:properties>
                <plm:cPWR_DeepSleepMode displayName="Deep sleep wakeup">
                  <temp:description>
            The way that DeepSleep wake-up is handled. Following possibilities exist:<br /><br />
            0: No DeepSleep done, but application can set modes<br />
            1: Ext. KBI int wakeup<br />
            2: RTI timer wakeup every 1024mS +-30%<br />
            3: Ext. KBI int and RTI timer wakeup every 1024mS +-30%<br />
            4: Ext. KBI int and RTI timer wakeup +-30%, radio in hibernate - not reset<br />
            5: Radio in acoma/doze, supplying 62.5kHz clock to MCU, MCU in STOP3, RTI wakeup from ext clock 512mS (max avail with ext 62.5khz)<br />
            6: Radio in doze mode, supplying 62.5KHz to MCU, MCU in STOP3, radio wakeup after cPWR_DozeDurationMs, KBI Int Wake-up available also<br />
            30: Test of some stack code (Not good or valid anymore)<br />
            31: Test as #3 but power down only done once<br />
            33: Test of MCU Wait<br />
            34: Test of MCU Stop3<br />
            35: Test of MCU Stop2<br />
            36: Test of MCU Stop1<br />
            37: Test of RADIO Doze without clkout<br />
            38: Test of RADIO AcomaDoze without clkout<br />
            39: Test of RADIO Hibernate<br />
            40: Test of RADIO Off
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_DeepSleepMode" />
                  <plm:value>3</plm:value>
                </plm:cPWR_DeepSleepMode>
                <plm:cPWR_SleepMode displayName="Deep sleep handling">
                  <temp:description>
            The way that Sleep mode is handled. Following possibilities exist:<br /><br />
            0: No Sleep done, but application can set modes<br />
            1: Doze mode on radio with clock enabled and WAIT on MCU
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_SleepMode" />
                  <plm:value>1</plm:value>
                </plm:cPWR_SleepMode>
                <plm:cPWR_RTITickTime displayName="Distance between RTI interrupts">
                  <temp:description>
            The distance between RTI interrupts when enabled and in Stop2/3<br /><br />
            0: Disabled.<br />
            1: 8 ms.<br />
            2: 32 ms.<br />
            3: 64 ms.<br />
            4: 128 ms.<br />
            5: 256 ms.<br />
            6: 512 ms.<br />
            7: 1024 ms.
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_RTITickTime" />
                  <plm:value>7</plm:value>
                </plm:cPWR_RTITickTime>
                <plm:cPWR_RTITicks displayName="Tick time multiplier">
                  <temp:description>
            This number multiplied with the above "Distance between RTI interrupts" (cPWR_RTITickTime) time gives the time to DeepSleep.
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_RTITicks" />
                  <plm:value>3</plm:value>
                </plm:cPWR_RTITicks>
                <plm:cPWR_CallWakeupStackProcAfterDeepSleep displayName="Enabling of external call at wake-up">
                  <temp:description>
            Enabling of external call to a procedure each time that DeepSleep is exited.<br /><br />
            0: Don't call any functions after DeepSleep (MAC)<br />
            1: Call a function after DeepSleep (Stack)
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_CallWakeupStackProcAfterDeepSleep" />
                  <plm:value>1</plm:value>
                </plm:cPWR_CallWakeupStackProcAfterDeepSleep>
                <plm:cPWR_KBIWakeupEnable displayName="Enabling of KBI interrupts">
                  <temp:description>
            Select if the KBI interrupt has to be enabled or disabled if the define cPWR_KBIInitAndVectorEnable is TRUE.<br /><br />
            1: Also use KBI interrupt to wakeup<br />
            0: Don't use KBI int. on PTAx pins
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_KBIWakeupEnable" />
                  <plm:value>1</plm:value>
                </plm:cPWR_KBIWakeupEnable>
                <plm:cPWR_LVD_Enable displayName="Low Voltage Detection configuration">
                  <temp:description>
            The use of Low Voltage detection has the following possibilities:
              0: Don't use Low voltage detection at all
              1: Use polled =&gt; Check made each time the function is called.
              2: RTI timer used for handling when to poll LVD, according
                 to the cPWR_LVD_Ticks constant
              3: LVDE and LVDRE  are set to hold MCU in reset while LVD_VH condition is detected
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_Enable" />
                  <plm:value>3</plm:value>
                </plm:cPWR_LVD_Enable>
                <plm:cPWR_LVD_Ticks displayName="How often to check the LVD level">
                  <temp:description>
            How often to check the LVD level when cPWR_LVD_Enable == 2<br />
            This is the number of RTI interrupts before voltage is checked (consumes current and time).
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_Ticks" />
                  <plm:value>3600</plm:value>
                </plm:cPWR_LVD_Ticks>
                <plm:cPWR_LVD_LEVEL_50_Ticks displayName="Level 2 counter value">
                  <temp:description>
            A counter value to control LEVEL 2. The value will be decremented whenever
            PWR_NODEPOWER_LEVEL_66 is valid. System will change to PWR_NODEPOWER_LEVEL_50
            when the counter reaches 0. Must be adjusted according to how often the LVD
            is polled (cPWR_LVD_LEVEL_50_Ticks * cPWR_LVD_Ticks * cPWR_RTITickTime).
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_LEVEL_50_Ticks" />
                  <plm:value>10</plm:value>
                </plm:cPWR_LVD_LEVEL_50_Ticks>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PWR_Interface.h" destination=".\PLM\Interface\PWR_Interface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PWRLib.h" destination=".\PLM\Interface\PWRLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\RST_Interface.h" destination=".\PLM\Interface\RST_Interface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Sound.h" destination=".\PLM\Interface\Sound.h">
              <temp:description />
              <plm:properties>
                <plm:Buzzer displayName="Buzzer module enabled">
                  <temp:description>
            This parameter enables or disables buzzer support.<br />
            Note: this property will only have effect on MC1321x-NCB and MC1321x-SRB targets.
          </temp:description>
                  <temp:regExLib name="define" param1="gBuzzerSupported_d" />
                  <plm:value>false</plm:value>
                </plm:Buzzer>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Switch.h" destination=".\PLM\Interface\Switch.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1319xEVBSARD.h" destination=".\PLM\Interface\Switch_MC1319xEVBSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1319xGB60.h" destination=".\PLM\Interface\Switch_MC1319xGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1321xNCBSRB.h" destination=".\PLM\Interface\Switch_MC1321xNCBSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetAxiomGB60.h" destination=".\PLM\Interface\TargetAxiomGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xEVB.h" destination=".\PLM\Interface\TargetMC1319xEVB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xRD01.h" destination=".\PLM\Interface\TargetMC1319xRD01.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xSARD.h" destination=".\PLM\Interface\TargetMC1319xSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1321xNCB.h" destination=".\PLM\Interface\TargetMC1321xNCB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1321xSRB.h" destination=".\PLM\Interface\TargetMC1321xSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetQE128xEVB.h" destination=".\PLM\Interface\TargetQE128xEVB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xREM.h" destination=".\PLM\Interface\TargetMC1323xREM.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xRCM.h" destination=".\PLM\Interface\TargetMC1323xRCM.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xTWRRF.h" destination=".\PLM\Interface\TargetMC1323xTWRRF.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xUSBR2.h" destination=".\PLM\Interface\TargetMC1323xUSBR2.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TMR_Interface.h" destination=".\PLM\Interface\TMR_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:TmrApplicationTimers displayName="Number of available timers for the application">
                  <temp:description>
            The number of timers required for the application. This includes timers for the LED, KBD and UART platform modules. So if the
            application needs three timers, set this constant to 6 (if all the three modules mentioned are included).
          </temp:description>
                  <temp:regExLib name="define" param1="gTmrApplicationTimers_c" />
                  <plm:value>4</plm:value>
                </plm:TmrApplicationTimers>
                <plm:TMRDebug displayName="Enable timer module Debug">
                  <temp:description>
            This parameter (gTMR_Debug_d) causes the timer code to assert (loop forever) if the
            timer allocation function is asked for a timer and does not have any
            left. If this is turned off, be careful to check the return value from TMR_AllocateTimer().
          </temp:description>
                  <temp:regExLib name="define" param1="gTMR_Debug_d" />
                  <plm:value>true</plm:value>
                </plm:TMRDebug>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\UART_Interface.h" destination=".\PLM\Interface\UART_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:Uart1_Enabled displayName="Enable the UART on SCI port 1">
                  <temp:description>
            Enables the UART functionality on SCI port 1 if set to True. Set to False if no UART functionality is wanted on SCI port 1<br /><br />
            For MC13213-NCB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC13213-SRB target the following applies:<br />
            SCI2 = UART on USB connector (only choice)<br /><br />
            For MC1320x-S08QE128-EVB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC1323x based targets the following applies:<br />
            SCI1 = UART on USB connector (only choice)<br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUart1_Enabled_d" />
                  <plm:value>true</plm:value>
                </plm:Uart1_Enabled>
                <plm:Uart2_Enabled displayName="Enable the UART on SCI port 2">
                  <temp:description>
            Enables the UART functionality on SCI port 2 if set to True. Set to False if no UART functionality is wanted on SCI port 2.<br /><br />
            For MC13213-NCB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC13213-SRB target the following applies:<br />
            SCI2 = UART on USB connector (only choice)<br /><br />
            For MC1320x-S08QE128-EVB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC1323x based targets the following applies:<br />
            SCI1 = UART on USB connector (only choice)<br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUart2_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:Uart2_Enabled>
                <plm:gUART1_UseHWFlowControl_d displayName="UART 1 Hardware flow control enabled">
                  <temp:description>
            Set to True to use hardware flow control on UART 1. If you want to
            use no flow control, set to False. This property enables Flow Control
            on the receiver side (control of RTS1 output pin).
            If you want Flow Control on the transciever side please set the Full Hardware Flow Control property to true.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_EnableHWFlowControl_d" />
                  <plm:value>true</plm:value>
                </plm:gUART1_UseHWFlowControl_d>
                <plm:gUART1_UseFullHWFlowControl_d displayName="UART 1 Full Hardware flow control enabled">
                  <temp:description>
            Set to True to use Full hardware flow control on UART 1.
            This property enables Flow Control on the transciever side (monitoring of CTS1 pin).
            This property cannot be set ot true if the Hardware Flow Control property is set to false.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_EnableFullHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART1_UseFullHWFlowControl_d>
                <plm:gUART2_UseHWFlowControl_d displayName="UART 2 Hardware flow control enabled">
                  <temp:description>
            Set to True to use hardware flow control on UART 2. If you want to
            use no flow control, set to False. This property enables Flow Control
            on the receiver side (control of RTS2 output pin).
            If you want Flow Control on the transciever side please set the Full Hardware Flow Control property to true.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_EnableHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART2_UseHWFlowControl_d>
                <plm:gUART2_UseFullHWFlowControl_d displayName="UART 2 Full Hardware flow control enabled">
                  <temp:description>
            Set to True to use Full hardware flow control on UART 2.
            This property enables Flow Control on the transciever side (monitoring of CTS2 pin).
            This property cannot be set ot true if the Hardware Flow Control property is set to false.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_EnableFullHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART2_UseFullHWFlowControl_d>
                <plm:gDefaultUartBaudRate_c displayName="UART Baud Rate">
                  <temp:description>
            This property defines the Baud Rate used for sending and receiving data over UART.<br /></temp:description>
                  <temp:regExLib name="define" param1="gUartDefaultBaud_c" />
                  <plm:value>Baudrate_115200</plm:value>
                </plm:gDefaultUartBaudRate_c>
                <plm:Uart_TransmitBuffers displayName="Uart Transmit Buffers">
                  <temp:description>
            The number of entries in the transmit-buffers-in-waiting list.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart_TransmitBuffers_c" />
                  <plm:value>3</plm:value>
                </plm:Uart_TransmitBuffers>
                <plm:Uart1_ReceiveBufferSize displayName="Uart 1 Receive Buffer Size">
                  <temp:description>
            Size of the driver's Rx circular buffer for UART1. These buffers are used to
            hold received bytes until the application can retrieve them via the
            UartX_GetBytesFromRxBuffer() functions, and are not otherwise accessable
            from outside the driver. The size does not need to be a power of two.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_ReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:Uart1_ReceiveBufferSize>
                <plm:Uart2_ReceiveBufferSize displayName="Uart 2 Receive Buffer Size">
                  <temp:description>
            Size of the driver's Rx circular buffer for UART2. These buffers are used to
            hold received bytes until the application can retrieve them via the
            UartX_GetBytesFromRxBuffer() functions, and are not otherwise accessable
            from outside the driver. The size does not need to be a power of two.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_ReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:Uart2_ReceiveBufferSize>
                <plm:Uart1_RxFlowControlSkew displayName="Uart 1 Rx FlowControl Skew">
                  <temp:description>
            If flow control is used, there is a delay before telling the far side
            to stop and the far side actually stopping. When there are SKEW bytes
            remaining in the driver's Rx buffer, tell the far side to stop
            transmitting. Setting for UART 1.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_RxFlowControlSkew_d" />
                  <plm:value>8</plm:value>
                </plm:Uart1_RxFlowControlSkew>
                <plm:Uart2_RxFlowControlSkew displayName="Uart 2 Rx FlowControl Skew">
                  <temp:description>
            If flow control is used, there is a delay before telling the far side
            to stop and the far side actually stopping. When there are SKEW bytes
            remaining in the driver's Rx buffer, tell the far side to stop
            transmitting. Setting for UART 2.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_RxFlowControlSkew_d" />
                  <plm:value>8</plm:value>
                </plm:Uart2_RxFlowControlSkew>
                <plm:Uart1_RxFlowControlResume displayName="Uart 1 Rx Flow Control Resume">
                  <temp:description>
            Number of bytes left in the Rx buffer when hardware flow control is deasserted.
            Settig for UART 1.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_RxFlowControlResume_d" />
                  <plm:value>8</plm:value>
                </plm:Uart1_RxFlowControlResume>
                <plm:Uart2_RxFlowControlResume displayName="Uart 2 Rx Flow Control Resume">
                  <temp:description>
            Number of bytes left in the Rx buffer when hardware flow control is deasserted.
            Setting for UART 2.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_RxFlowControlResume_d" />
                  <plm:value>8</plm:value>
                </plm:Uart2_RxFlowControlResume>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\CDC_Interface.h" destination=".\PLM\Interface\CDC_Interface.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\crt0.h" destination=".\PLM\Source\Common\Interface\crt0.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\HCS08_Prefix.h" destination=".\PLM\Source\Common\Interface\HCS08_Prefix.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\icg.h" destination=".\PLM\Source\Common\Interface\icg.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\PlatformInit.h" destination=".\PLM\Source\Common\Interface\PlatformInit.h">
              <temp:description />
              <plm:properties>
                <plm:gPpdMode_d displayName="Enable or disable the MC1323x Partial Power Down Capability">
                  <temp:description>
                    The RX Partial Power Down capability can be configured.
                    This feature is available only for MC1323x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gPpdMode_d" />
                  <plm:value>gPpdModeOFF_d</plm:value>
                </plm:gPpdMode_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\Common\Mc1319xDrv\Mc1319xDrv.c" destination=".\PLM\Source\Common\Mc1319xDrv\Mc1319xDrv.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\crt0.c" destination=".\PLM\Source\Common\Sys\crt0.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\dummyisr.c" destination=".\PLM\Source\Common\Sys\dummyisr.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\icg.c" destination=".\PLM\Source\Common\Sys\icg.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\isrvectors.c" destination=".\PLM\Source\Common\Sys\isrvectors.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\NV_Data.c" destination=".\PLM\Source\Common\Sys\NV_Data.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\PlatformInit.c" destination=".\PLM\Source\Common\Sys\PlatformInit.c" />
            <temp:file version="1.0" source=".\HCS08\Source\CMT\CMT.c" destination=".\PLM\Source\CMT\CMT.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\CMT\CMT.h" destination=".\PLM\Source\CMT\CMT.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display.c" destination=".\PLM\Source\Display\Display.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display_MC1323x_RCM.h" destination=".\PLM\Source\Display\Display_MC1323x_RCM.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display_MC1323x_RCM.c" destination=".\PLM\Source\Display\Display_MC1323x_RCM.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\FunctionLib\FunctionLib.c" destination=".\PLM\Source\FunctionLib\FunctionLib.c" />
            <temp:file version="1.0" source=".\HCS08\Source\IIC\IIC.c" destination=".\PLM\Source\IIC\IIC.c" />
            <temp:file version="1.0" source=".\HCS08\Source\IIC\IIC.h" destination=".\PLM\Source\IIC\IIC.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Keyboard\Keyboard.c" destination=".\PLM\Source\Keyboard\Keyboard.c" />
            <temp:file version="1.0" source=".\HCS08\Source\LED\Led.c" destination=".\PLM\Source\Led\Led.c" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWR.c" destination=".\PLM\Source\LPM\PWR.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWR_MC1323x.c" destination=".\PLM\Source\LPM\PWR_MC1323x.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWRLib.c" destination=".\PLM\Source\LPM\PWRLib.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_Flash.c" destination=".\PLM\Source\NVM\NV_Flash.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_Flash.h" destination=".\PLM\Source\NVM\NV_Flash.h" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_FlashHAL.c" destination=".\PLM\Source\NVM\NV_FlashHAL.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_FlashHAL.h" destination=".\PLM\Source\NVM\NV_FlashHAL.h" />
            <temp:file version="1.0" source=".\HCS08\Source\RST\RSTHal.c" destination=".\PLM\Source\RST\RSTHal.c" />
            <temp:file version="1.0" source=".\HCS08\Source\SPI\SPI.c" destination=".\PLM\Source\SPI\SPI.c" />
            <temp:file version="1.0" source=".\HCS08\Source\SPI\SPI.h" destination=".\PLM\Source\SPI\SPI.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Touchpad\Touchpad.c" destination=".\PLM\Source\Touchpad\Touchpad.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Touchpad\Touchpad.h" destination=".\PLM\Source\Touchpad\Touchpad.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Sound\Sound.c" destination=".\PLM\Source\Sound\Sound.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TempSensor\LM61B.c" destination=".\PLM\Source\TempSensor\LM61B.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TMR\Timer.c" destination=".\PLM\Source\TMR\Timer.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TMR\Timer.h" destination=".\PLM\Source\TMR\Timer.h" />
            <temp:file version="1.0" source=".\HCS08\Source\UART\Uart.c" destination=".\PLM\Source\UART\Uart.c" />
            <temp:file version="1.0" source=".\HCS08\Source\UART\Uart.h" destination=".\PLM\Source\UART\Uart.h" />
            <temp:file version="1.0" source=".\HCS08\Source\FunctionLib\FunctionLib.c" destination=".\PLM\Source\FunctionLib\FunctionLib.c" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_QE128_far_banked.prm" destination=".\PLM\PRM\Linker_QE128_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC9S08QE128')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13233C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13233C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13233C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13234C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13234C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13234C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13237C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13237C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13237C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker.prm" destination=".\PLM\PRM\Linker.prm" includeCondition=" (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
          </temp:files>
          <temp:components />
        </plm:component>
      </sln:components>
    </sln:project>
    <sln:project displayName="S80_EndDevice" wizard="BeeKitHCS08MACWizardV16">
      <sln:description>Template application</sln:description>
      <sln:components>
        <ssm:component displayName="Software Support Modules" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:ssm="http://freescale.com/ns/beekit/ssm" xmlns="http://freescale.com/ns/beekit/ssm">
          <temp:description>The Software Support Module (SSM) is a collection of hardware independent modules that are not specifically releated to any standard or specification (like IEEE 802.15.4 MAC/PHY or ZigBee). The SSM includes such modules as the Task Scheduler (TS) and the ZTC (ZigBee Test Client) protocol implementation.</temp:description>
          <ssm:properties>
            <ssm:ZTCenabled displayName="ZTC: ZTC enabled">
              <temp:description>
        Disable or enable ZTC support<br /><br />
        ZTC allows external tools, such as the Test Tool, to monitor messages (requests and responses) passing through the SAP Handlers between stack layers, and to inject messages for testing.<br />
        ZTC also provide an interface for sending and receiving mesages in the application.<br /><br />
        Note: It is not recommended to enable this module, unless you are a ZigBee expert and understand the 802.15.4 and ZigBee specification in detail.<br />
        Behavior can be:<br />
        1. It can change timing and throughput of the stack.<br />
        2. packets can be missed and the stack configured to malfunction.<br /><br />
        Note: Changing this property requires re-import of the project xml file.
      </temp:description>
              <ssm:value>false</ssm:value>
            </ssm:ZTCenabled>
          </ssm:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\CommUtil\CommUtil.h" destination=".\SSM\CommUtil\CommUtil.h" />
            <temp:file version="1.0" source=".\Generic\CommUtil\CommUtil.c" destination=".\SSM\CommUtil\CommUtil.c" />
            <temp:file version="1.0" source=".\Generic\TS\Interface\TS_Interface.h" destination=".\SSM\TS\Interface\TS_Interface.h">
              <temp:description />
              <ssm:properties>
                <ssm:TsMaxTasks displayName="TS: Number of tasks">
                  <temp:description>
          Maximum number of tasks in the task table. A minimum of 7 is needed for a MAC solution.
        </temp:description>
                  <temp:regExLib name="define" param1="gTsMaxTasks_c" />
                  <ssm:value>10</ssm:value>
                </ssm:TsMaxTasks>
              </ssm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\TS\Source\TS_kernel.h" destination=".\SSM\TS\Source\TS_kernel.h" />
            <temp:file version="1.0" source=".\Generic\TS\Source\TS_kernel.c" destination=".\SSM\TS\Source\TS_kernel.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Interface\AspZtc.h" destination=".\SSM\ZTC\Interface\aspZtc.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Interface\ZTCInterface.h" destination=".\SSM\ZTC\Interface\ZTCInterface.h">
              <temp:description />
              <ssm:properties>
                <ssm:gZtcCommInterfaceType_d displayName="Serial protocol to use for communication with the host">
                  <temp:description>
          This property must be set to either gSCIInterface_d, gI2CInterface_d or gSPIInterface_d <br />
          depending on the serial protocol to be used for the communication with the host.<br />
          If selected, the SCI interface can be configured through the defines listed in the UART_Interface.h file in the Platform component.<br />
          If selected, the I2C interface can be configured through the defines listed in the IIC_Interface.h file in the Platform component.<br />
          If selected, the SPI interface can be configured through the defines listed in the SPI_Interface.h file in the Platform component.
          <br /></temp:description>
                  <temp:regExLib name="define" param1="gZtcCommInterfaceType_d" />
                  <ssm:value>gSCIInterface_d</ssm:value>
                </ssm:gZtcCommInterfaceType_d>
                <ssm:ZtcMacGetSetPIBCapability displayName="ZTC: MAC Get/Set PIB Capability">
                  <temp:description>
          Enable MAC Get/Set PIB capability through ZTC.
          <br />
          Note: Turning this on is only useful if gSAPMessagesEnableMlme_d is also on.
        </temp:description>
                  <temp:regExLib name="define" param1="gZtcMacGetSetPIBCapability_d" />
                  <ssm:value>true</ssm:value>
                </ssm:ZtcMacGetSetPIBCapability>
                <ssm:SAPMessagesEnableMcps displayName="ZTC: MCPS SAP Capability">
                  <temp:description>
          Enable MCPS SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableMcps_d" />
                  <ssm:value>true</ssm:value>
                </ssm:SAPMessagesEnableMcps>
                <ssm:SAPMessagesEnableMlme displayName="ZTC: MLME SAP Capability">
                  <temp:description>
          Enable MLME SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableMlme_d" />
                  <ssm:value>true</ssm:value>
                </ssm:SAPMessagesEnableMlme>
                <ssm:SAPMessagesEnableAsp displayName="ZTC: ASP SAP Capability">
                  <temp:description>
          Enable ASP (Application Support in the MAC) SAP capability through ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gSAPMessagesEnableAsp_d" />
                  <ssm:value>false</ssm:value>
                </ssm:SAPMessagesEnableAsp>
                <ssm:ZtcErrorReporting displayName="ZTC: Error Reporting Capability">
                  <temp:description>
          Enable Error reporting in ZTC.
        </temp:description>
                  <temp:regExLib name="define" param1="gZtcErrorReporting_d" />
                  <ssm:value>false</ssm:value>
                </ssm:ZtcErrorReporting>
              </ssm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcClientCommunication.c" destination=".\SSM\ZTC\Source\ZtcClientCommunication.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcClientCommunication.h" destination=".\SSM\ZTC\Source\ZtcClientCommunication.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyData.c" destination=".\SSM\ZTC\Source\ZtcCopyData.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyData.h" destination=".\SSM\ZTC\Source\ZtcCopyData.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcCopyDataTbl.h" destination=".\SSM\ZTC\Source\ZtcCopyDataTbl.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcIBManagement.c" destination=".\SSM\ZTC\Source\ZtcIBManagement.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcIBManagement.h" destination=".\SSM\ZTC\Source\ZtcIBManagement.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMacPIB.h" destination=".\SSM\ZTC\Source\ZtcMacPIB.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMain.c" destination=".\SSM\ZTC\Source\ZtcMain.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfo.c" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfo.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfo.h" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfo.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcMsgTypeInfoTbl.h" destination=".\SSM\ZTC\Source\ZtcMsgTypeInfoTbl.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcPrivate.h" destination=".\SSM\ZTC\Source\ZtcPrivate.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfo.c" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfo.c" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfo.h" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfo.h" />
            <temp:file version="1.0" source=".\Generic\ZTC\Source\ZtcSAPHandlerInfoTbl.h" destination=".\SSM\ZTC\Source\ZtcSAPHandlerInfoTbl.h" />
          </temp:files>
          <temp:components />
        </ssm:component>
        <mac:component displayName="MacStandalone" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:mac="http://freescale.com/ns/beekit/mac" xmlns:plm="http://freescale.com/ns/beekit/plm" xmlns="http://freescale.com/ns/beekit/mac">
          <temp:description>
            <p>
        The 802.15.4 MAC/PHY component is an implementation of the IEEE 802.15.4 physical layer (PHY) and medium access control (MAC) sublayer used for low data rate wireless connectivity with fixed, portable, and moving devices with no battery or very limited battery consumption requirements typically operating in the personal operating space (POS).
</p>
            <p>
            The MAC component is provided as a library.The PHY component is provided as source code.
</p>

            There is a set of 7 available MAC libraries for HCS08-GT60 and 7 for HCS08-QE128 platforms. 
            All these are IEEE 802.15.4 Standard compliant devices which have different functionalities excluded. 
            This allows a greater flexibility in choosing a MAC which will have all the required application specific functionality and nothing more.<br />
            In order to differentiate these libraries, there is also a set of keywords used in the file naming. These keywords are enumerated and explained below:<br /><br /><blockquote><b>FFD</b>  - stands for "<b>F</b>ull <b>F</b>unction <b>D</b>evice". The Freescale 802.15.4 MAC software FFD type is an IEEE 802.15.4 Standard compliant Full Functional Device with all MAC features included. It can be used in applications that require both device and coordinator functionality such as ZigBee routers.<br /><br /><b>RFD</b>  - stands for "<b>R</b>educed <b>F</b>unction <b>D</b>evice". The Freescale 802.15.4 MAC software RFD device type is an IEEE 802.15.4 Standard compliant Reduced Functional Device. It can be used in applications that require device functionality only such as leaf devices.That is, end-devices with no child devices.<br /><br /><b>NB</b>   - stands for "<b>N</b>o <b>B</b>eacon". The Freescale 802.15.4 MAC software NB device type is an IEEE 802.15.4 Standard compliant device with the beacon functionality excluded. This library cannot be used for applications that need to participate in beaconed networks.<br /><br /><b>NS</b>   - stands for "<b>N</b>o <b>S</b>ecurity". The Freescale 802.15.4 MAC software NS device type is an IEEE 802.15.4 Standard compliant device with the security functionality excluded. This library cannot be used for applications that require encrypted or otherwise secured transactions.<br /><br /><b>NGTS</b> - stands for "<b>N</b>o <b>G</b>uaranteed <b>T</b>ime <b>S</b>lots". The Freescale 802.15.4 MAC software NGTS device type is an IEEE 802.15.4 Standard compliant device with the GTS functionality excluded. This library cannot be used for applications demanding GTS data transmissions.<br /><br /></blockquote><p>
          Below you can find the list of all 7 available MAC libraries for HCS08-GT60: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD.Lib<br /> 
                         2. 802.15.4_MAC_FFDNB.Lib<br /> 
                         3. 802.15.4_MAC_FFDNBNS.Lib<br />
                         4. 802.15.4_MAC_FFDNGTS.Lib<br />
                         5. 802.15.4_MAC_RFD.Lib<br />
                         6. 802.15.4_MAC_RFDNB.Lib<br />
                         7. 802.15.4_MAC_RFDNBNS.Lib<br /></blockquote></p><p>
          Below you can find the list of all 7 available MAC libraries for HCS08-QE128: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD_S08QE128.Lib<br />
                 2. 802.15.4_MAC_FFDNB_S08QE128.Lib<br /> 
                 3. 802.15.4_MAC_FFDNBNS_S08QE128.Lib<br />
                 4. 802.15.4_MAC_FFDNGTS_S08QE128.Lib<br />
                 5. 802.15.4_MAC_RFD_S08QE128.Lib<br />
                 6. 802.15.4_MAC_RFDNB_S08QE128.Lib<br />
                 7. 802.15.4_MAC_RFDNBNS_S08QE128.Lib<br /></blockquote></p><p>
          Below you can find the list of all 7 available MAC libraries for MC1323x: 
          <br /><blockquote>
                 1. 802.15.4_MAC_FFD_S08QE128.Lib<br />
                 2. 802.15.4_MAC_FFDNB_S08MC1323x.Lib<br /> 
                 3. 802.15.4_MAC_FFDNBNS_S08MC1323x.Lib<br />
                 4. 802.15.4_MAC_FFDNGTS_S08MC1323x.Lib<br />
                 5. 802.15.4_MAC_RFD_S08MC1323x.Lib<br />
                 6. 802.15.4_MAC_RFDNB_S08MC1323x.Lib<br />
                 7. 802.15.4_MAC_RFDNBNS_S08MC1323x.Lib<br /></blockquote></p></temp:description>
          <mac:properties>
            <mac:DeviceType displayName="Device type">
              <temp:description>
               This property selects the device type. The possible values are: 
                <blockquote><b>Full Function Device</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.<br /><br /><b>Full Function Device, No Beacon</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Beacon property indicates that the application can participate in non beaconed networks.<br /><br /><b>Full Function Device, No Beacon, No Security</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Beacon property indicates that the application can participate in non beaconed networks. The No Security property indicates that the data packet transmitted over the air will not be encrypted.<br /><br /><b>Full Function Device, No Beacon, No Guaranteed Time Slots</b> -  It can be used in applications that require both device and coordinator functionality such as ZigBee routers.The No Guaranteed Time Slots property indicates that the application can not allocate Guaranteed Time Slots.<br /><br /><b>Reduced Function device</b> - It can be used in applications that require device functionality only.That is, end-devices with no child devices.<br /><br /><b>Reduced Function device, No Beacon</b> - It can be used in applications that require device functionality only.That is, end-devices with no child devices. The No Beacon property indicates that the application can participate in non beaconed networks.<br /><br /><b>Reduced Function device, No Beacon, No Security</b> -  It can be used in applications that require device functionality only.That is, end-devices with no child devices.The No Beacon property indicates that the application can participate in non beaconed networks. The No Security property indicates that the data packet transmitted over the air will not be encrypted.<br /><br /></blockquote><br /><b>If this property is modified after an export of the project in which it resides,  then the project should be exported again.</b></temp:description>
              <mac:value>Full Function Device</mac:value>
            </mac:DeviceType>
            <mac:Version displayName="IEEE 802.15.4 Standard Version">
              <temp:description>Select MAC IEEE 802.15.4 Standard Version<br />
      Select beween MAC 2003 and MAC 2006 IEEE 802.15.4 Standard versions.
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
      </temp:description>
              <mac:value>MAC-2006</mac:value>
            </mac:Version>
          </mac:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\Interface\AppAspInterface.h" destination=".\MacPhy\Interface\AppAspInterface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\FunctionalityDefines.h" destination=".\MacPhy\Interface\FunctionalityDefines.h" />
            <temp:file version="1.0" source=".\Generic\Interface\ASM_Interface.h" destination=".\MacPhy\Interface\ASM_Interface.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhy.h" destination=".\MacPhy\Interface\MacPhy.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyDebug.h" destination=".\MacPhy\Interface\MacPhyDebug.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyFLib.h" destination=".\MacPhy\Interface\MacPhyFLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyGlobalHdr.h" destination=".\MacPhy\Interface\MacPhyGlobalHdr.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyInit.h" destination=".\MacPhy\Interface\MacPhyInit.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyMC1323X.h" destination=".\MacPhy\Interface\MacPhyMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xHandler.h" destination=".\MacPhy\Interface\Mc1319xHandler.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1323xHandler.h" destination=".\MacPhy\Interface\Mc1323xHandler.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\MsgSystem.h" destination=".\MacPhy\Interface\MsgSystem.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MsgSystemDbg.h" destination=".\MacPhy\Interface\MsgSystemDbg.h" />
            <temp:file version="1.0" source=".\Generic\Interface\NwkMacInterface.h" destination=".\MacPhy\Interface\NwkMacInterface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PhyMacMsg.h" destination=".\MacPhy\Interface\PhyMacMsg.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PublicConst.h" destination=".\MacPhy\Interface\PublicConst.h" />
            <temp:file version="1.0" source=".\Generic\Interface\SecurityLib.h" destination=".\MacPhy\Interface\SecurityLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Telec.h" destination=".\MacPhy\Interface\Telec.h" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\Phy.h" destination=".\MacPhy\Phy\Interface\Phy.h" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\Eof.c" destination=".\MacPhy\Phy\Isr\Eof.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\Mc1319xHandler.c" destination=".\MacPhy\Phy\Isr\Mc1319xHandler.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Isr\StreamIsr.c" destination=".\MacPhy\Phy\Isr\StreamIsr.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\CcaEd.c" destination=".\MacPhy\Phy\Primitives\CcaEd.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\Data.c" destination=".\MacPhy\Phy\Primitives\Data.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\GetSet.c" destination=".\MacPhy\Phy\Primitives\GetSet.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Primitives\SetRxTxState.c" destination=".\MacPhy\Phy\Primitives\SetRxTxState.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\PhyMain.c" destination=".\MacPhy\Phy\PhyMain.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\PhyMC1323X.h" destination=".\MacPhy\Phy\Interface\PhyMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\Interface\PhyDebugMC1323X.h" destination=".\MacPhy\Phy\Interface\PhyDebugMC1323X.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyISR.c" destination=".\MacPhy\Phy\MC1323X\PhyISR.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyPacketProcessor.c" destination=".\MacPhy\Phy\MC1323X\PhyPacketProcessor.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyPlmeData.c" destination=".\MacPhy\Phy\MC1323X\PhyPlmeData.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Phy\MC1323X\PhyTime.c" destination=".\MacPhy\Phy\MC1323X\PhyTime.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                                                  (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                                                  (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) or                            ((//plm:Target/plm:value = 'User defined target configuration') and (//plm:Processor/plm:value = 'MC1321x'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08QE128.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08QE128.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                             ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:Processor/plm:value = 'MC9S08QE128'))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_FFDNGTS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_FFDNGTS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\802.15.4_MAC_RFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\802.15.4_MAC_RFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2003') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_FFDNGTS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Full Function Device, No Guaranteed Time Slots') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFD_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFD_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNB_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08MC1323x.Lib" destination=".\MacPhy\Libs\MAC2006\802.15.4_MAC2006_RFDNBNS_S08MC1323x.Lib" includeCondition="((//mac:component/mac:properties/mac:DeviceType/mac:value       = 'Reduced Function Device, No Beacon, No Security') and                            (//mac:Version/mac:value = 'MAC-2006') and                            ((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))))" copyInProject="includeCondition" />
          </temp:files>
          <temp:components>
            <MacApps:component displayName="MacApps" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MacApps="http://freescale.com/ns/beekit/MacApps" xmlns="http://freescale.com/ns/beekit/MacApps" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MacApps Component.xsd">
              <temp:description>The MacApps are integrated into the CodeBase as templates. This deliverable is source code, and can be used as example code. 
  With its help, the user can easily create applications on top of the MAC layer. It is important to know that the MacApps source code is 
  as hardware (and MCU) independent as possible. This makes it possible to make new hardware targets and even change Platform (MCU) with 
  a minimal effort. </temp:description>
              <temp:files>
                <temp:file version="1.0" source=".\makefile.init" destination=".\makefile.init" />
                <temp:file version="1.0" source=".\Generic\Init\MApp_init.c" destination=".\Application\Init\MApp_init.c" />
                <temp:file version="1.0" source=".\Generic\Init\MApp_init.h" destination=".\Application\Init\MApp_init.h" />
                <temp:file version="1.0" source=".\Generic\Init\MacInit.c" destination=".\Application\Init\MacInit.c" />
                <temp:file version="1.0" source=".\Generic\Init\MacInit.h" destination=".\Application\Init\MacInit.h" />
                <temp:file version="1.0" source=".\Generic\Interface\802_15_4.h" destination=".\Application\Interface\802_15_4.h" />
                <temp:file version="1.0" source=".\Generic\Interface\Mac_Globals.h" destination=".\Application\Interface\Mac_Globals.h" />
                <temp:file version="1.0" source=".\Generic\Interface\MacTaskTbl.h" destination=".\Application\Interface\MacTaskTbl.h" />
                <temp:file version="1.0" source=".\Generic\Configure\GlobalVars.c" destination=".\Application\Configure\GlobalVars.c" />
                <temp:file version="1.0" source=".\Generic\Configure\ApplicationConf.h" destination=".\Application\Configure\ApplicationConf.h">
                  <temp:description />
                  <MacApps:properties>
                    <MacApps:Channel displayName="Channel" editor="ChannelEditor">
                      <temp:description>
            Default value of the channel(s) in which the device is willing to operate.
            This is used when starting up the network.<br />
            The value is a bit mask, each bit representing a channel. For the 2.4 GHz band
            only channels 11 to 26 are allowed. In order to select multiple channels, the bitwise OR  operation is performed on the selected channels values.<br /> 
            Based on the selection criteria one of the channels will be chosen and the device will run only on this
            one channel.<br /><table border="1" width="17%"><tr><td width="61" bgcolor="#C0C0C0"><font size="1">Channel</font></td><td bgcolor="#C0C0C0"><font size="1">Value</font></td></tr><tr><td width="61"><font size="1">11</font></td><td><font size="1">0x00000800</font></td></tr><tr><td width="61"><font size="1">12</font></td><td><font size="1">0x00001000</font></td></tr><tr><td width="61"><font size="1">13</font></td><td><font size="1">0x00002000</font></td></tr><tr><td width="61"><font size="1">14</font></td><td><font size="1">0x00004000</font></td></tr><tr><td width="61"><font size="1">15</font></td><td><font size="1">0x00008000</font></td></tr><tr><td width="61"><font size="1">16</font></td><td><font size="1">0x00010000</font></td></tr><tr><td width="61"><font size="1">17</font></td><td><font size="1">0x00020000</font></td></tr><tr><td width="61"><font size="1">18</font></td><td><font size="1">0x00040000</font></td></tr><tr><td width="61"><font size="1">19</font></td><td><font size="1">0x00080000</font></td></tr><tr><td width="61"><font size="1">20</font></td><td><font size="1">0x00100000</font></td></tr><tr><td width="61"><font size="1">21</font></td><td><font size="1">0x00200000</font></td></tr><tr><td width="61"><font size="1">22</font></td><td><font size="1">0x00400000</font></td></tr><tr><td width="61"><font size="1">23</font></td><td><font size="1">0x00800000</font></td></tr><tr><td width="61"><font size="1">24</font></td><td><font size="1">0x01000000</font></td></tr><tr><td width="61"><font size="1">25</font></td><td><font size="1">0x02000000</font></td></tr><tr><td width="61"><font size="1">26</font></td><td><font size="1">0x04000000</font></td></tr></table></temp:description>
                      <temp:regExLib name="define" param1="mDefaultValueOfChannel_c" />
                      <temp:format base="hex" />
                      <MacApps:value>16777216</MacApps:value>
                    </MacApps:Channel>
                    <MacApps:ExtendedAddress displayName="Extended address" editor="BeeKitBigEndianHexEditorV02">
                      <temp:description>
            The extended address to be assigned to the device. Each device must have a unique address.<br />
            
            This property must be entered in Little Endian byte order.

            <br />For example, if the Address found on the boards is shown as eg. MAC: 0x 00 50 C2 37 B0 04 05 A9 then the Extended address property must be entered as: 0xA9,0x05,0x04,0xB0,0x37,0xC2,0x50,0x00. 
          </temp:description>
                      <temp:regExLib name="define" param1="mDefaultValueOfExtendedAddress_c" />
                      <MacApps:value>0xE4,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF</MacApps:value>
                    </MacApps:ExtendedAddress>
                    <MacApps:LPMIncluded displayName="Low power mode enabled">
                      <temp:description>
            This property defines whether or not the LPM (Low Power Module) will be included in the application.
          </temp:description>
                      <temp:regExLib name="define" param1="gLpmIncluded_d" />
                      <MacApps:value>false</MacApps:value>
                    </MacApps:LPMIncluded>
                  </MacApps:properties>
                </temp:file>
                <temp:file version="1.0" source=".\Generic\Configure\AppToMacPhyConfig.h" destination=".\Application\Configure\AppToMacPhyConfig.h" />
                <temp:file version="1.0" source=".\Generic\Configure\AppToPlatformConfig.h" destination=".\Application\Configure\AppToPlatformConfig.h" />
              </temp:files>
              <temp:components>
                <MyWirelessApp:component displayName="MyWirelessApp" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MyWirelessApp="http://freescale.com/ns/beekit/MyWirelessApp" xmlns="http://freescale.com/ns/beekit/MyWirelessApp" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MyWirelessApp Component.xsd">
                  <temp:description>    
     
    The demo applications are presented below:<br /><blockquote>
    	MyWirelessAppDemoFramework             - Initialization and main loop.<br /> 
    	MyWirelessAppDemoNonBeaconCoordinator  - Coordinator sends indirect data to device.<br />
    	MyWirelessAppDemoNonBeaconEndDevice    - Device polls for data from the coordinator.<br />
    	MyWirelessAppDemoBeaconCoordinator     - Coordinator starts a beaconed network.<br />
    	MyWirelessAppDemoBeaconEndDevice       - Device receives data using automatic polling.<br />
    	MyWirelessAppDemoSecurityCoordinator   - Coordinator uses security.<br />
    	MyWirelessAppDemoSecurityEndDevice     - Device uses security.<br /></blockquote><p>
    	MyWirelessAppDemoFramework application is the first in a series of demo applications. The purpose of the series is to demonstrate how the features of the 802.15.4 stack can be used to create a simple point to point network. We will end up with two applications: 
    	<blockquote>
    	1) A device which is able to discover a PAN coordinator, associate to it, and transmit/receive data.<br /> 
    	2) A coordinator which is able to start a network (PAN), accept associations from devices, and transmit/receive data. <br /></blockquote></p><p>
    Throughout this series of applications the included UART module is used for printing out status messages to the RS232 console. The serial port on your PC must be configured to 8 data bits, 1 stop bit and no parity. The Baud Rate is user selectable. <br /></p></temp:description>
                  <temp:components>
                    <MyWirelessAppEx06b:component displayName="MyWirelessAppDemoNonBeaconEndDevice" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:MyWirelessAppEx06b="http://freescale.com/ns/beekit/MyWirelessAppEx06b" xmlns="http://freescale.com/ns/beekit/MyWirelessAppEx06b" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://freescale.com/ns/beekit/MyWirelessAppEx06b Component.xsd">
                      <temp:description>    
     
    The demo applications are presented below:<br /><blockquote>
    	MyWirelessAppDemoFramework             - Initialization and main loop.<br /> 
    	MyWirelessAppDemoNonBeaconCoordinator  - Coordinator sends indirect data to device.<br />
    	MyWirelessAppDemoNonBeaconEndDevice    - Device polls for data from the coordinator. == This Application ==<br />
    	MyWirelessAppDemoBeaconCoordinator     - Coordinator starts a beaconed network.<br />
    	MyWirelessAppDemoBeaconEndDevice       - Device receives data using automatic polling.<br />
    	MyWirelessAppDemoSecurityCoordinator   - Coordinator uses security.<br />
    	MyWirelessAppDemoSecurityEndDevice     - Device uses security.<br /></blockquote><p>
    	This example will demonstrate indirect data transfer from the coordinator to the device. Data sent to the device is not transmitted immediately but put into  a queue in the MAC of the coordinator.
      Here it resides until the device sends a poll request. The poll request is initiated by the network or application layer on the device.
      To test the data transfer from the coordinator to the device, both should be connected to a PC with a RS232 terminal. 
      When sending an ASCII file (send as text) from the terminal of the coordinator, the file will be  printed to the terminal connected to the device. 
      It resembles a bidirectional wireless RS232 cable replacement (though, without error checking and flow  control in this simple example).

    </p><p>
    Throughout this series of applications the included UART module is used for printing out status messages to the RS232 console. The serial port on your PC must be configured to 8 data bits, 1 stop bit and no parity. The Baud Rate is user selectable.
    </p></temp:description>
                      <temp:files>
                        <temp:file version="1.0" source=".\Source\MApp.c" destination=".\Application\Source\MApp.c" />
                        <temp:file version="1.0" source=".\Source\MApp.h" destination=".\Application\Source\MApp.h">
                          <temp:description />
                          <MyWirelessAppEx06b:properties>
                            <MyWirelessAppEx06b:MaxPackets displayName="Maximum number of pending data packets">
                              <temp:description>
            This property specifies the default number of data packets that can remain in the indirect queue of a associated end device. This can be adjusted based on application needs. It can be any value in the range of 1 to 4. 
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfMaxPendingDataPackets_c" />
                              <MyWirelessAppEx06b:value>2</MyWirelessAppEx06b:value>
                            </MyWirelessAppEx06b:MaxPackets>
                            <MyWirelessAppEx06b:PollIntervalSlow displayName="Poll Interval Slow">
                              <temp:description>
            This property specifies the default interval (in milliseconds) after which the end device polls for data, in case that no data was available in the previous poll request.
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfPollIntervalSlow_c" />
                              <MyWirelessAppEx06b:value>820</MyWirelessAppEx06b:value>
                            </MyWirelessAppEx06b:PollIntervalSlow>
                            <MyWirelessAppEx06b:PollIntervalFast displayName="Poll Interval Fast">
                              <temp:description>
            This property specifies the default interval (in milliseconds) after which the end device polls for data, in case that data was available in the previous poll request.
          </temp:description>
                              <temp:regExLib name="define" param1="mDefaultValueOfPollIntervalFast_c" />
                              <MyWirelessAppEx06b:value>82</MyWirelessAppEx06b:value>
                            </MyWirelessAppEx06b:PollIntervalFast>
                          </MyWirelessAppEx06b:properties>
                        </temp:file>
                      </temp:files>
                      <temp:components />
                    </MyWirelessAppEx06b:component>
                  </temp:components>
                </MyWirelessApp:component>
              </temp:components>
            </MacApps:component>
          </temp:components>
        </mac:component>
        <plm:component displayName="Platform" version="V01.00" maxUsage="1" xmlns:temp="http://freescale.com/ns/beekit/componentTemplate" xmlns:plm="http://freescale.com/ns/beekit/plm" xmlns="http://freescale.com/ns/beekit/plm">
          <temp:description>The BeeKit software packet is intended to work on current and future hardware and MCU platforms. This is made possible by isolating application software (MacApps) and MAC as much as possible from the hardware. This is accomplished by calling hardware dependant functions in the Platform software (PLM) in contrast to using macros and defines all around in the code.</temp:description>
          <plm:properties>
            <plm:Target displayName="Target hardware">
              <temp:description>Select HCS08 target hardware<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>MC1323x-REM</plm:value>
            </plm:Target>
            <plm:Processor displayName="Target Processor">
              <temp:description>Select target HCS08 processor<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>MC13234C</plm:value>
            </plm:Processor>
            <plm:UseBootloader displayName="Use Bootloader">
              <temp:description>Enable the use of the bootloader. Required for OTAP Client Demo Application.<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>false</plm:value>
            </plm:UseBootloader>
            <plm:EnableOTAPSupport displayName="Enable OTAP Support">
              <temp:description>Enables Over The Air Programming Support. Required for OTAP Client and Server Applications.<br />
      Note: changing this property after the first solution export requires a re-import into CodeWarrior of the xml project file.
    </temp:description>
              <plm:value>false</plm:value>
            </plm:EnableOTAPSupport>
          </plm:properties>
          <temp:files>
            <temp:file version="1.0" source=".\Generic\Interface\Bootloader.h" destination=".\PLM\Interface\Bootloader.h" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Bootloader.c" destination=".\PLM\Source\Bootloader\Bootloader.c" includeCondition=" (//plm:UseBootloader/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_Generic.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_Generic.c" includeCondition=" ((//plm:Target/plm:value = 'User defined target configuration') and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot.h" destination=".\PLM\Source\Bootloader\Eeprom_Boot.h" includeCondition=" (//plm:UseBootloader/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT45DB021D.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT45DB021D.c" includeCondition=" (((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF')) and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT25HP512C1.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT25HP512C1.c" includeCondition=" (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\Eeprom_Boot_AT24C1024BW.c" destination=".\PLM\Source\Bootloader\Eeprom_Boot_AT24C1024BW.c" includeCondition=" ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') and                            (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\NV_Utils.c" destination=".\PLM\Source\Bootloader\NV_Utils.c" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Bootloader\NV_Utils.h" destination=".\PLM\Source\Bootloader\NV_Utils.h" includeCondition=" ((//plm:EnableOTAPSupport/plm:value = 'true') or (//plm:UseBootloader/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Eeprom.h" destination=".\PLM\Interface\Eeprom.h" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\OtapSupport.h" destination=".\PLM\Interface\OtapSupport.h" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT45DB021D.c" destination=".\PLM\Source\Eeprom\Eeprom_AT45DB021D.c" includeCondition=" (((//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF')) and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT25HP512C1.c" destination=".\PLM\Source\Eeprom\Eeprom_AT25HP512C1.c" includeCondition=" (((//plm:Target/plm:value = 'MC1321x-SRB') or (//plm:Target/plm:value = 'MC1321x-NCB')) and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\Eeprom_AT24C1024BW.c" destination=".\PLM\Source\Eeprom\Eeprom_AT24C1024BW.c" includeCondition=" ((//plm:Target/plm:value = 'MC1320x-S08QE128-EVB') and                            (//plm:EnableOTAPSupport/plm:value = 'true'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Eeprom\OtapSupport.c" destination=".\PLM\Source\Eeprom\OtapSupport.c" includeCondition=" (//plm:EnableOTAPSupport/plm:value = 'true')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\ACC_Interface.h" destination=".\PLM\Interface\ACC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gAccelerometerSupported_d displayName="Accelerometer module enabled">
                  <temp:description>
                    This parameter enables or disables the complete Accelerometer module. If set to True, the Accelerometer module is enabled and if set to False
                    the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gAccelerometerSupported_d" />
                  <plm:value>false</plm:value>
                </plm:gAccelerometerSupported_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\Accelerometer\Accelerometer.c" destination=".\PLM\Source\Accelerometer\Accelerometer.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Accelerometer\Accelerometer.h" destination=".\PLM\Source\Accelerometer\Accelerometer.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\ADC_Interface.h" destination=".\PLM\Interface\ADC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gADC_Enabled_d displayName="ADC module enabled">
                  <temp:description>
                    This parameter enables or disables the complete ADC module. If set to True, the ADC module is enabled and if set to False
                    the complete module is disabled. Currently the ADC module is only suported on the MC13237C and MC9S08QE128 targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gADC_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gADC_Enabled_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\ADC\ADC.c" destination=".\PLM\Source\ADC\ADC.c" includeCondition=" ((//plm:Processor/plm:value = 'MC13237C') or (//plm:Processor/plm:value = 'MC9S08QE128'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\ADC\ADC.h" destination=".\PLM\Source\ADC\ADC.h" includeCondition=" ((//plm:Processor/plm:value = 'MC13237C') or (//plm:Processor/plm:value = 'MC9S08QE128'))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\CMT_Interface.h" destination=".\PLM\Interface\CMT_Interface.h" includeCondition=" ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C'))" copyInProject="includeCondition">
              <temp:description />
              <plm:properties>
                <plm:gCmtIncluded_d displayName="CMT module enabled">
                  <temp:description>
            This parameter enables or disables the CMT module. If set to True, the CMT module is enabled and if set to False
            the module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gCmtIncluded_d>
                <plm:gCmtDefaultCarrierFrequency_c displayName="CMT default carrier frequency">
                  <temp:description>
            This parameter sets the CMT default Carrier frequency in Hz
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultCarrierFrequency_c" />
                  <plm:value>38000</plm:value>
                </plm:gCmtDefaultCarrierFrequency_c>
                <plm:gCmtDefaultCarrierDutyCycle_c displayName="CMT default carrier duty cycle">
                  <temp:description>
            This parameter sets the CMT default Carrier duty cycle in %
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultCarrierDutyCycle_c" />
                  <plm:value>33</plm:value>
                </plm:gCmtDefaultCarrierDutyCycle_c>
                <plm:gCmtDefaultLog0MarkInMicros_c displayName="CMT default Mark 0 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default MARK duration in microseconds for the Logical 0 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog0MarkInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog0MarkInMicros_c>
                <plm:gCmtDefaultLog0SpaceInMicros_c displayName="CMT default Space 0 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default SPACE duration in microseconds for the Logical 0 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog0SpaceInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog0SpaceInMicros_c>
                <plm:gCmtDefaultLog1MarkInMicros_c displayName="CMT default Mark 1 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default MARK duration in microseconds for the Logical 1 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog1MarkInMicros_c" />
                  <plm:value>560</plm:value>
                </plm:gCmtDefaultLog1MarkInMicros_c>
                <plm:gCmtDefaultLog1SpaceInMicros_c displayName="CMT default Space 1 duration in microseconds">
                  <temp:description>
            This parameter sets the CMT default SPACE duration in microseconds for the Logical 1 bit generation.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtDefaultLog1SpaceInMicros_c" />
                  <plm:value>1690</plm:value>
                </plm:gCmtDefaultLog1SpaceInMicros_c>
                <plm:gCmtLsbFirstDefault_c displayName="CMT default bit shifting method LSB first or MSB first">
                  <temp:description>
            This parameter sets the CMT default shifting method: LSB firts or MSB first.
            Setting this parameter to TRUE will configure the CMT to shift bits as LSB first, 
            while setting this parameter to FALSE will configure the CMT to shift bits as MSB first
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtLsbFirstDefault_c" />
                  <plm:value>true</plm:value>
                </plm:gCmtLsbFirstDefault_c>
                <plm:gCmtTimeOperModeDefault_c displayName="CMT default bit operating mode: Time Mode or Baseband Mode">
                  <temp:description>
            This parameter sets the CMT default operating mode: Time Mode or Baseband Mode.
            Setting this parameter to TRUE will configure the CMT in Time Mode, 
            while setting this parameter to FALSE will configure the CMT in Baseband Mode.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtTimeOperModeDefault_c" />
                  <plm:value>true</plm:value>
                </plm:gCmtTimeOperModeDefault_c>
                <plm:gCmtOutputPolarityDefault_c displayName="CMT default output polarity">
                  <temp:description>
            This parameter sets the CMT ouput polarity: IRO active low or IRO active high.
            Setting this parameter to TRUE will configure the IRO pin to be active high, 
            while setting this parameter to FALSE will configure the IRO pin to be active low.
          </temp:description>
                  <temp:regExLib name="define" param1="gCmtOutputPolarityDefault_c" />
                  <plm:value>false</plm:value>
                </plm:gCmtOutputPolarityDefault_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Debug.h" destination=".\PLM\Interface\Debug.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Display.h" destination=".\PLM\Interface\Display.h">
              <temp:description />
              <plm:properties>
                <plm:gLCDSupported_d displayName="Display module enabled">
                  <temp:description>
              This parameter enables or disables the complete Display module. If set to True, the Display module is enabled and if set to False
              the complete module is disabled. Currently this property will only have effect on MC1321x-NCB, MC1320x-S08QE128-EVB and MC1323x-RCM targets.
            </temp:description>
                  <temp:regExLib name="define" param1="gLCDSupported_d" />
                  <plm:value>false</plm:value>
                </plm:gLCDSupported_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\EmbeddedTypes.h" destination=".\PLM\Interface\EmbeddedTypes.h" />
            <temp:file version="1.0" source=".\Generic\Interface\FunctionLib.h" destination=".\PLM\Interface\FunctionLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IIC_Interface.h" destination=".\PLM\Interface\IIC_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gIIC_Enabled_d displayName="IIC module enabled">
                  <temp:description>
                        This parameter enables or disables the IIC module. If set to True the IIC module is enabled. If set to False the IIC module is disabled.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gIIC_Enabled_d>
                <plm:gIIC_DefaultBaudRate_c displayName="IIC default Baud Rate">
                  <temp:description>
                        This property defines the Baud Rate used for sending and receiving data over IIC.<br /></temp:description>
                  <temp:regExLib name="define" param1="gIIC_DefaultBaudRate_c" />
                  <plm:value>gIIC_BaudRate_100000_c</plm:value>
                </plm:gIIC_DefaultBaudRate_c>
                <plm:gIIC_SlaveTransmitBuffersNo_c displayName="IIC slave transmit buffers">
                  <temp:description>
                        The number of entries in the transmit-buffers-in-waiting list when the IIC is used in slave mode.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_SlaveTransmitBuffersNo_c" />
                  <plm:value>3</plm:value>
                </plm:gIIC_SlaveTransmitBuffersNo_c>
                <plm:gIIC_SlaveReceiveBufferSize_c displayName="IIC slave receive buffer Size">
                  <temp:description>
                        Size of the driver's Rx circular buffer when used in slave mode. This buffer is used to	hold the received bytes until the application can retrieve them via the	IIC_GetByteFromRxBuffer() function, and are not otherwise accessible from outside the driver.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_SlaveReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:gIIC_SlaveReceiveBufferSize_c>
                <plm:gIIC_SlaveAddress_c displayName="IIC slave address">
                  <temp:description>
                        Address of the IIC module when used in slave mode.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_DefaultSlaveAddress_c" />
                  <plm:value>0x10</plm:value>
                </plm:gIIC_SlaveAddress_c>
                <plm:gIIC_SlaveTxDataAvailableSignalEnabled_c displayName="IIC in slave mode signals host when data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode.<br />
                        Specifies whether or not the host processor will be signaled when the local IIC module has information to send.<br />
                        After being signaled, the host processor should address the local IIC module as a slave device and read the available information from.<br /><br />
                        In case when this property is enabled, the host processor is signaled through a GPIO that can be configured with the help of the properties below.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_Slave_TxDataAvailableSignal_Enable_c" />
                  <plm:value>false</plm:value>
                </plm:gIIC_SlaveTxDataAvailableSignalEnabled_c>
                <plm:gIIC_SignalTxDataAvailablePortData_c displayName="Data port for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the local data port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePortDataReg_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortData_c>
                <plm:gIIC_SignalTxDataAvailablePortDirection_c displayName="Direction port for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the local data direction port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePortDDirReg_c" />
                  <plm:value>PTADD</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortDirection_c>
                <plm:gIIC_SignalTxDataAvailablePortPin_c displayName="Port pin mask for the line to signal host that data is available to send">
                  <temp:description>
                        This property is applicable only when the IIC module is used in slave mode and the property that enables the host to be signaled when data is available to be sent by the local IIC module is activated.<br />
                        Specifies the mask of the pin on the local port used for connecting the signal line between the local processor and the host processor.
                    </temp:description>
                  <temp:regExLib name="define" param1="gIIC_TxDataAvailablePinMask_c" />
                  <plm:value>0x02</plm:value>
                </plm:gIIC_SignalTxDataAvailablePortPin_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\IoConfig.h" destination=".\PLM\Interface\IoConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigS08.h" destination=".\PLM\Interface\IoConfigS08.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigS08QE128.h" destination=".\PLM\Interface\IoConfigS08QE128.h" />
            <temp:file version="1.0" source=".\Generic\Interface\IoConfigMC1323x.h" destination=".\PLM\Interface\IoConfigMC1323x.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\SPI_Interface.h" destination=".\PLM\Interface\SPI_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gSPI_Enabled_d displayName="SPI module enabled">
                  <temp:description>
                    This parameter enables or disables the complete SPI module. If set to True, the SPI module is enabled and if set to False
                    the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:gSPI_Enabled_d>
                <plm:gSPI_Slave_TxDataAvailableSignal_Enable_c displayName="SPI slave tx data available signal">
                  <temp:description>
                    Slave transmitter can signal to the master if there's data available
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_Slave_TxDataAvailableSignal_Enable_c" />
                  <plm:value>false</plm:value>
                </plm:gSPI_Slave_TxDataAvailableSignal_Enable_c>
                <plm:gSPI_AutomaticSsPinAssertion_c displayName="SPI automatic SS output assertion">
                  <temp:description>
                    SPI automatic SS output assertion.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_AutomaticSsPinAssertion_c" />
                  <plm:value>true</plm:value>
                </plm:gSPI_AutomaticSsPinAssertion_c>
                <plm:gSPI_SlaveTransmitBuffersNo_c displayName="SPI Slave - Number of Tx buffers">
                  <temp:description>
                    The number of entries in the transmit-buffers-in-waiting list when the SPI is used in slave mode.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_SlaveTransmitBuffersNo_c" />
                  <plm:value>3</plm:value>
                </plm:gSPI_SlaveTransmitBuffersNo_c>
                <plm:gSPI_SlaveReceiveBufferSize_c displayName="SPI Slave - Rx buffer size">
                  <temp:description>
                    Size of the driver's Rx circular buffer when used in slave mode. This buffer is used to hold the received bytes until the application can retrieve them via the SPI_GetByteFromBuffer() function, and are not otherwise accessible from outside the driver. 
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_SlaveReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:gSPI_SlaveReceiveBufferSize_c>
                <plm:gSPI_DefaultBaudRate_c displayName="SPI default Baud Rate">
                  <temp:description>
                    This property defines the Baud Rate used for sending and receiving data over SPI.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultBaudRate_c" />
                  <plm:value>gSPI_BaudRate_100000_c</plm:value>
                </plm:gSPI_DefaultBaudRate_c>
                <plm:gSPI_DefaultMode_c displayName="SPI Mode">
                  <temp:description>
                    SPI mode of operation: Master / Slave.<br />
                    The Master generates the clock signal.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultMode_c" />
                  <plm:value>gSPI_SlaveMode_c</plm:value>
                </plm:gSPI_DefaultMode_c>
                <plm:gSPI_DefaultBitwiseShfting_c displayName="SPI bitwise shifting">
                  <temp:description>
                    Normally, SPI data is transferred most significant bit (MSB) first.<br />
                    Selecting "gSPI_LsbFirst_c", the least significant bit first enable (LSBFE) bit is set, and  SPI data is shifted LSB first.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultBitwiseShfting_c" />
                  <plm:value>gSPI_MsbFirst_c</plm:value>
                </plm:gSPI_DefaultBitwiseShfting_c>
                <plm:gSPI_DefaultOperMode_c displayName="SPI bus mode">
                  <temp:description>
                    Full duplex - SPI uses separate pins for data input and data output.<br />
                    Single wire - SPI configured for single-wire bidirectional operation.
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultOperMode_c" />
                  <plm:value>gSPI_FullDuplex_c</plm:value>
                </plm:gSPI_DefaultOperMode_c>
                <plm:gSPI_DefaultClockPol_c displayName="SPI CLK polarity">
                  <temp:description>
                    This setting effectively places an inverter in series with the clock signal from a master SPI or to a slave SPI device.<br />
                    SPI clock polarity: Active Low / Active High
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultClockPol_c" />
                  <plm:value>gSPI_ActiveHighPolarity_c</plm:value>
                </plm:gSPI_DefaultClockPol_c>
                <plm:gSPI_DefaultClockPhase_c displayName="SPI CLK phase">
                  <temp:description>
                    This setting selects one of two clock formats for different kinds of synchronous serial peripheral devices.<br />
                    SPI clock phase: Odd Edge Shifting / Even Edge Shifting
                </temp:description>
                  <temp:regExLib name="define" param1="gSPI_DefaultClockPhase_c" />
                  <plm:value>gSPI_EvenEdgeShifting_c</plm:value>
                </plm:gSPI_DefaultClockPhase_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Touchpad_Interface.h" destination=".\PLM\Interface\Touchpad_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gTouchpadIncluded_d displayName="Touchpad module enabled">
                  <temp:description>
            This parameter enables or disables the complete Touchpad module. If set to True, the Touchpad module is enabled and if set to False
            the complete module is disabled. Currently this property will only have effect on MC1323x-RCM targets.
          </temp:description>
                  <temp:regExLib name="define" param1="gTouchpadIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gTouchpadIncluded_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\IrqControlLib.h" destination=".\PLM\Interface\IrqControlLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Keyboard.h" destination=".\PLM\Interface\Keyboard.h">
              <temp:description />
              <plm:properties>
                <plm:gKeyBoardSupported_d displayName="Keyboard module enabled">
                  <temp:description>
            This parameter enables or disables the complete Keyboard module. If set to True, the Keyboard module is enabled and if set to False
            the complete module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyBoardSupported_d" />
                  <plm:value>true</plm:value>
                </plm:gKeyBoardSupported_d>
                <plm:gKeyEventNotificationMode_c displayName="Key Event notification mode">
                  <temp:description>
            This parameter selects the mode for keyboard events notfication. If this parameter is set to gKbdEventShortLongPressMode_c the events sent from keyboard module
            are: short press and long press. If this parameter is set to gKbdEventPressHoldReleaseMode_c the events sent from keyboard module are: press, hold and release.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyEventNotificationMode_c" />
                  <plm:value>gKbdEventShortLongPressMode_c</plm:value>
                </plm:gKeyEventNotificationMode_c>
                <plm:mKeySCAN_c displayName="Key Scan Interval">
                  <temp:description>
            A short key will be returned if a key is held down for this number of milliseconds. The default value of this property is 50 milliseconds.<br />
            Make sure this constant is long enough for debounce time.
          </temp:description>
                  <temp:regExLib name="define" param1="gKeyScanInterval_c" />
                  <plm:value>50</plm:value>
                </plm:mKeySCAN_c>
                <plm:mLongKeySCAN_c displayName="Long key press duration">
                  <temp:description>
            This parameter is valid if gKbdEventShortLongPressMode_c is selected.<br />
            A long key will be returned if the key is held down for at least (Long key press duration)*(Key Scan Interval)miliseconds.
            The default value of this property is 20.<br />
            Default period for a long key is: 20*50 = 1000 milliseconds or 1 second.
          </temp:description>
                  <temp:regExLib name="define" param1="gLongKeyIterations_c" />
                  <plm:value>20</plm:value>
                </plm:mLongKeySCAN_c>
                <plm:gFirstHoldDetectIterations_c displayName="First hold detection interval">
                  <temp:description>
            This parameter is valid if gKbdEventPressHoldReleaseMode_c is selected.<br />
            The first hold event for a key will be generated after (First hold detection interval)*(Key Scan Interval)miliseconds.
            The default value of this property is 6.<br />
            Default period for the first hold event is 6*50 = 300 miliseconds or 0.3 seconds.
          </temp:description>
                  <temp:regExLib name="define" param1="gFirstHoldDetectIterations_c" />
                  <plm:value>6</plm:value>
                </plm:gFirstHoldDetectIterations_c>
                <plm:gHoldDetectIterations_c displayName="Hold detection interval">
                  <temp:description>
            This parameter is valid if gKbdEventPressHoldReleaseMode_c is selected.<br />
            After the first hold event for a key the hold events will be generated at each (Hold detection interval)*(Key Scan Interval)miliseconds.
            The default value of this property is 6.<br />
            Default period between the hold events is 6*50 = 300 miliseconds or 0.3 seconds.
          </temp:description>
                  <temp:regExLib name="define" param1="gHoldDetectIterations_c" />
                  <plm:value>6</plm:value>
                </plm:gHoldDetectIterations_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Led.h" destination=".\PLM\Interface\Led.h">
              <temp:description />
              <plm:properties>
                <plm:gLEDSupported_d displayName="LED module enabled">
                  <temp:description>
            This parameter enables or disables the complete LED module. If set to True, the LED module is enabled and if set to False
            the module is disabled. If set to False the remaining parameters for this module will have no effect.
          </temp:description>
                  <temp:regExLib name="define" param1="gLEDSupported_d" />
                  <plm:value>true</plm:value>
                </plm:gLEDSupported_d>
                <plm:LEDBlip displayName="LED blip enabled">
                  <temp:description>
            This parameter enables or disables the LED blip (short blink) in the LED module.
          </temp:description>
                  <temp:regExLib name="define" param1="gLEDBlipEnabled_d" />
                  <plm:value>false</plm:value>
                </plm:LEDBlip>
                <plm:mLEDInterval_c displayName="Flash interval">
                  <temp:description>
            Interval time for toggling the LED which is used for flashing. The flashing duty cycle is 50%. The unit is milliseconds and the allowed range is 0-262140 ms.
          </temp:description>
                  <temp:regExLib name="define" param1="mLEDInterval_c" />
                  <plm:value>100</plm:value>
                </plm:mLEDInterval_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1319xEVBSARD.h" destination=".\PLM\Interface\Led_MC1319xEVBSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1319xGB60.h" destination=".\PLM\Interface\Led_MC1319xGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Led_MC1321xNCBSRB.h" destination=".\PLM\Interface\Led_MC1321xNCBSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\LM61B.h" destination=".\PLM\Interface\LM61B.h" />
            <temp:file version="1.0" source=".\Generic\Interface\MacPhyPlatformLib.h" destination=".\PLM\Interface\MacPhyPlatformLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xDrv.h" destination=".\PLM\Interface\Mc1319xDrv.h" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\Mc1319xReg.h" destination=".\PLM\Interface\Mc1319xReg.h" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\Generic\Interface\NV_Data.h" destination=".\PLM\Interface\NV_Data.h">
              <temp:description />
              <plm:properties>
                <plm:gaMC1323x_CCA_Threshold_c displayName="MC1323x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1323x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1323x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1323x_CCA_Threshold_c>
                <plm:gaMC1323x_CCA_Offset_c displayName="MC1323x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1323x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1323x_CCA_Offset_c" />
                  <plm:value>0xA5</plm:value>
                </plm:gaMC1323x_CCA_Offset_c>
                <plm:gaMC1321x_CCA_Threshold_c displayName="MC1321x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1321x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1321x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1321x_CCA_Threshold_c>
                <plm:gaMC1321x_CCA_Offset_c displayName="MC1321x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1321x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1321x_CCA_Offset_c" />
                  <plm:value>0x9B</plm:value>
                </plm:gaMC1321x_CCA_Offset_c>
                <plm:gaMC1319x_CCA_Threshold_c displayName="MC1319x CCA Threshold">
                  <temp:description>
                    The threshold of the CCA operations for MC1319x.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1319x_CCA_Threshold_c" />
                  <plm:value>0x96</plm:value>
                </plm:gaMC1319x_CCA_Threshold_c>
                <plm:gaMC1319x_CCA_Offset_c displayName="MC1319x CCA Offset">
                  <temp:description>
                    The offset of the CCA operations.
                    This feature is available only for MC1319x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gaMC1319x_CCA_Offset_c" />
                  <plm:value>0x9B</plm:value>
                </plm:gaMC1319x_CCA_Offset_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\NVM_Interface.h" destination=".\PLM\Interface\NVM_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:gNvStorageIncluded_d displayName="NVM storage enabled">
                  <temp:description>
            This parameter enables or disables the complete NVM module. If set to True, the NVM module is enabled and if set to False
            the module is disabled.
          </temp:description>
                  <temp:regExLib name="define" param1="gNvStorageIncluded_d" />
                  <plm:value>false</plm:value>
                </plm:gNvStorageIncluded_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PlatformToMacPhyConfig.h" destination=".\PLM\Interface\PlatformToMacPhyConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PlatformToMacPhyDbgConfig.h" destination=".\PLM\Interface\PlatformToMacPhyDbgConfig.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PortConfig.h" destination=".\PLM\Interface\PortConfig.h">
              <temp:description />
              <plm:properties>
                <plm:gUserTransceiverType_d displayName="User defined transceiver type" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Type of the transceiver: MC1319x, MC1320x, MC1321x or MC1323x.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            <br />
            If transceiver type is set to MC1321x, and target is set to "User defined target configuration", then following default settings must be used:
            <br />
            - ATTN Port = Port D,  <br />
            - ATTN mask = Pin 0,  <br />
            - Rx/Tx_EN Port = Port D,  <br />
            - Rx/Tx_EN mask = Pin 1,   <br />
            - Transceiver Reset Port = Port D,  <br />
            - Transceiver Reset mask = Pin 3,  <br />
            - GPIO1/OUT_OF_IDLE Port = Port E,  <br />
            - GPIO1/OUT_OF_IDLE mask = Pin 7,   <br />
            - GPIO2/CRC_VALID Port = Port E,  <br />
            - GPIO2/CRC_VALID mask = Pin 1.     <br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUserTransceiverType_d" />
                  <plm:value>MC1321x</plm:value>
                </plm:gUserTransceiverType_d>
                <plm:UseExternalAntennaSwitch displayName="User defined internal or external Antenna switch configuration" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Select whether an external antenna switch should be used.<br />
            Note: is only applicable for MC1321x and MC1320x.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gUseExternalAntennaSwitch_c" />
                  <plm:value>true</plm:value>
                </plm:UseExternalAntennaSwitch>
                <plm:LED1_PORT displayName="LED 1 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED1_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED1_PORT>
                <plm:LED2_PORT displayName="LED 2 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED2_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED2_PORT>
                <plm:LED3_PORT displayName="LED 3 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 3.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED3_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED3_PORT>
                <plm:LED4_PORT displayName="LED 4 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 4.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED4_PORT" />
                  <plm:value>PTDD</plm:value>
                </plm:LED4_PORT>
                <plm:LED1_PIN displayName="LED 1 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 1 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED1_PIN" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:LED1_PIN>
                <plm:LED2_PIN displayName="LED 2 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 2 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED2_PIN" />
                  <temp:format base="hex" />
                  <plm:value>32</plm:value>
                </plm:LED2_PIN>
                <plm:LED3_PIN displayName="LED 3 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 3 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED3_PIN" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:LED3_PIN>
                <plm:LED4_PIN displayName="LED 4 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 4 of the LED Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="LED4_PIN" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:LED4_PIN>
                <plm:LED5_PORT displayName="LED 5 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls LED 5.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If the user defined target configuration has only 4 LEDs the value of this property will not be used.
          </temp:description>
                  <temp:regExLib name="define" param1="LED5_PORT" />
                  <plm:value>PTCD</plm:value>
                </plm:LED5_PORT>
                <plm:LED5_PIN displayName="LED 5 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls LED 5 of the LED 5 Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If the user defined target configuration has only 4 LEDs the value of this property must be set to 0.
          </temp:description>
                  <temp:regExLib name="define" param1="LED5_PIN" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:LED5_PIN>
                <plm:PORT_PINS displayName="Debug Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the debug pins.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="PORT_PINS" />
                  <plm:value>PTAD</plm:value>
                </plm:PORT_PINS>
                <plm:PORT1_PIN displayName="First debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the first debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT1_PIN" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:PORT1_PIN>
                <plm:PORT2_PIN displayName="Second debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the second debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT2_PIN" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:PORT2_PIN>
                <plm:PORT3_PIN displayName="Third debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the third debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT3_PIN" />
                  <temp:format base="hex" />
                  <plm:value>4</plm:value>
                </plm:PORT3_PIN>
                <plm:PORT4_PIN displayName="Fourth debug pin mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the fourth debug pin of the Debug Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="PORT4_PIN" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:PORT4_PIN>
                <plm:SWITCH1_PORT displayName="Switch 1 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH1_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH1_PORT>
                <plm:SWITCH2_PORT displayName="Switch 2 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH2_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH2_PORT>
                <plm:SWITCH3_PORT displayName="Switch 3 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 3.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH3_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH3_PORT>
                <plm:SWITCH4_PORT displayName="Switch 4 Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls switch 4.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="SWITCH4_PORT" />
                  <plm:value>PTAD</plm:value>
                </plm:SWITCH4_PORT>
                <plm:mSWITCH1_MASK displayName="Switch 1 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW1 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            Note: On the S08QE128-EVB board, Switch 1 is the first push-button labeled SW2.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH1_MASK" />
                  <temp:format base="hex" />
                  <plm:value>4</plm:value>
                </plm:mSWITCH1_MASK>
                <plm:mSWITCH2_MASK displayName="Switch 2 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW2 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            Note: On the S08QE128-EVB board, Switch 2 is the second push-button labeled SW3.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH2_MASK" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:mSWITCH2_MASK>
                <plm:mSWITCH3_MASK displayName="Switch 3 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW3 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            Note: On the S08QE128-EVB board, Switch 3 is the third push-button labeled SW4.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH3_MASK" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:mSWITCH3_MASK>
                <plm:mSWITCH4_MASK displayName="Switch 4 mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls SW2 of the Switch Port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
            Note: On the S08QE128-EVB board, Switch 4 is the last push-button labeled SW5.
          </temp:description>
                  <temp:regExLib name="define" param1="mSWITCH4_MASK" />
                  <temp:format base="hex" />
                  <plm:value>32</plm:value>
                </plm:mSWITCH4_MASK>
                <plm:gMC1319xAttnPort displayName="ATTN Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the ATTN signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAttnPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xAttnPort>
                <plm:gMC1319xAttnMask_c displayName="ATTN mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls ATTN of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAttnMask_c" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:gMC1319xAttnMask_c>
                <plm:gMC1319xRxTxPort displayName="Rx/Tx_EN Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Rx and Tx signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xRxTxPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xRxTxPort>
                <plm:gMC1319xRxTxMask_c displayName="Rx/Tx_EN mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the pin that controls Rx/Tx signal of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xRxTxMask_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gMC1319xRxTxMask_c>
                <plm:gMC1319xResetPort displayName="Transceiver Reset Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Reset signal to the radio.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xResetPort" />
                  <plm:value>PTDD</plm:value>
                </plm:gMC1319xResetPort>
                <plm:gMC1319xResetMask_c displayName="Transceiver Reset mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the Reset pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xResetMask_c" />
                  <temp:format base="hex" />
                  <plm:value>8</plm:value>
                </plm:gMC1319xResetMask_c>
                <plm:gMC1319xAntSwPort displayName="Antenna Switch Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the Antenna Switch.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property will only have effect on the MC1319x transceiver.<br />
            If the transceiver type is MC1321x the value of this property will not be used.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAntSwPort" />
                  <plm:value>PTBD</plm:value>
                </plm:gMC1319xAntSwPort>
                <plm:gMC1319xAntSwMask_c displayName="Antenna Switch mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the Antenna Switch pin of the port.<br />
            This property will only have effect on the MC1319x transceiver.<br />
            If the transceiver type is MC1321x the value of this property must be set to 0.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xAntSwMask_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gMC1319xAntSwMask_c>
                <plm:EnableLNA displayName="Enable Low Noise Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for enabling the Low Noise Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="EnableLNA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:EnableLNA>
                <plm:EnablePA displayName="Enable Power Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for enabling the Power Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="EnablePA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:EnablePA>
                <plm:DisableLNA displayName="Disable Low Noise Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for disabling the Low Noise Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="DisableLNA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:DisableLNA>
                <plm:DisablePA displayName="Disable Power Amplifier Macro" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This property is a C macro editable by the user. The value of the property should contain the macro definition code for disabling the Power Amplifier.<br /><b>The C code entered here must be syntactically correct. For instance the last statement of the C macro must end with a semicolon. </b></temp:description>
                  <temp:regExLib name="spaceDefine" param1="DisablePA" />
                  <temp:format base="hex" />
                  <plm:value>NotDefined</plm:value>
                </plm:DisablePA>
                <plm:gMC1319xGPIO1Port displayName="GPIO1/OUT_OF_IDLE Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the GPIO 1.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO1Port" />
                  <plm:value>PTED</plm:value>
                </plm:gMC1319xGPIO1Port>
                <plm:gMC1319xGPIO1Mask_c displayName="GPIO1/OUT_OF_IDLE mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the GPIO1 pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO1Mask_c" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:gMC1319xGPIO1Mask_c>
                <plm:gMC1319xGPIO2Port displayName="GPIO2/CRC_VALID Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the GPIO 2.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO2Port" />
                  <plm:value>PTED</plm:value>
                </plm:gMC1319xGPIO2Port>
                <plm:gMC1319xGPIO2Mask_c displayName="GPIO2/CRC_VALID mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the GPIO2 pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gMC1319xGPIO2Mask_c" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:gMC1319xGPIO2Mask_c>
                <plm:gSCI1RTSPort_c displayName="SCI 1 RTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 1 RTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1RTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI1RTSPort_c>
                <plm:gSCI1RTSPin_c displayName="SCI 1 RTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 1 RTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1RTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gSCI1RTSPin_c>
                <plm:gSCI1CTSPort_c displayName="SCI 1 CTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 1 CTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1CTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI1CTSPort_c>
                <plm:gSCI1CTSPin_c displayName="SCI 1 CTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 1 CTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI1CTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>1</plm:value>
                </plm:gSCI1CTSPin_c>
                <plm:gSCI2RTSPort_c displayName="SCI 2 RTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 2 RTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2RTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI2RTSPort_c>
                <plm:gSCI2RTSPin_c displayName="SCI 2 RTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 2 RTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2RTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>64</plm:value>
                </plm:gSCI2RTSPin_c>
                <plm:gSCI2CTSPort_c displayName="SCI 2 CTS Port" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            The port that controls the SCI 2 CTS.<br />
            This property must be set to one of the following values: PTAD, PTBD, PTCD, PTDD, PTED, PTFD, PTGD or PTHD.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2CTSPort_c" />
                  <plm:value>PTAD</plm:value>
                </plm:gSCI2CTSPort_c>
                <plm:gSCI2CTSPin_c displayName="SCI 2 CTS mask" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            This mask must be set to 2<sup>PinNumber</sup>, where PinNumber is the number of the SCI 2 CTS pin of the port.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            This setting will have no effect on MC1323x because UART2 is not available.<br /></temp:description>
                  <temp:regExLib name="define" param1="gSCI2CTSPin_c" />
                  <temp:format base="hex" />
                  <plm:value>128</plm:value>
                </plm:gSCI2CTSPin_c>
                <plm:gPTADValue_c displayName="Port A register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A data register (PTAD).<br />
            Writes  are latched into all bits of this register. For port A pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTAD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTADValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTADValue_c>
                <plm:gPTAPEValue_c displayName="Port A pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A pull-up enable register (PTAPE).<br />
            For port A pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled. <br />
            For port A pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 =Internal pullup device disabled  for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTAPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>60</plm:value>
                </plm:gPTAPEValue_c>
                <plm:gPTADDValue_c displayName="Port A data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port A data direction register (PTADD).<br />
            These read/write bits control the direction of port A pins and what is read for PTAD reads.<br /><blockquote>
              1 = Output driver enabled for port A bit n and PTAD reads return the contents of PTADn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTADDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>66</plm:value>
                </plm:gPTADDValue_c>
                <plm:gPTADSValue_c displayName="Port A drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port A drive strength register(PTADH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTADSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port A Bits - Each of these control bits selects between low and high
            output drive for the associated PTA pin. For port A pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port A bit n.<br />
            1 High output drive strength selected for port A bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTADSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTADSValue_c>
                <plm:gPTBDValue_c displayName="Port B register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B data register (PTBD).<br />
            Writes  are latched into all bits of this register. For port B pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTBD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.   <br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDValue_c>
                <plm:gPTBPEValue_c displayName="Port B pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B pull-up enable register (PTBPE).<br />
            For port B pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled. <br />
            For port B pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 =Internal pullup device disabled  for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBPEValue_c>
                <plm:gPTBDDValue_c displayName="Port B data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port B data direction register (PTBDD).<br />
            These read/write bits control the direction of port B pins and what is read for PTBD reads.<br /><blockquote>
              1 = Output driver enabled for port B bit n and PTBD reads return the contents of PTBDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.
            </blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTBDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDDValue_c>
                <plm:gPTBDSValue_c displayName="Port B drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port B drive strength register(PTBDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTBDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port B Bits - Each of these control bits selects between low and high
            output drive for the associated PTB pin. For port B pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port B bit n.<br />
            1 High output drive strength selected for port B bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTBDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTBDSValue_c>
                <plm:gPTCDValue_c displayName="Port C register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C data register (PTCD).<br />
            Writes are latched into all bits of this register. For port C pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTCD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If using MC1323x-REM, MC1323x-RCM or MC1323x-TWR-RF, Pin 1 of Port C must be set as output and must have logical value zero to be able to use switches 1 to 4.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCDValue_c>
                <plm:gPTCPEValue_c displayName="Port C pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C pull-up enable register (PTCPE).<br />
            For port C pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port C pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCPEValue_c>
                <plm:gPTCDDValue_c displayName="Port C data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port C data direction register (PTCDD).<br />
            These read/write bits control the direction of port C pins and what is read for PTCD reads.<br /><blockquote>
              1 = Output driver enabled for port C bit n and PTCD reads return the contents of PTCDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.<br />
            If using MC1323x-REM, MC1323x-RCM or MC1323x-TWR-RF, Pin 1 of Port C must be set as output and must have logical value zero to be able to use switches 1 to 4.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTCDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>16</plm:value>
                </plm:gPTCDDValue_c>
                <plm:gPTCDSValue_c displayName="Port C drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port C drive strength register(PTCDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTCDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port C Bits - Each of these control bits selects between low and high
            output drive for the associated PTC pin. For port C pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port C bit n.<br />
            1 High output drive strength selected for port C bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTCDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTCDSValue_c>
                <plm:gPTDDValue_c displayName="Port D register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D data register (PTDD).<br />
            Writes are latched into all bits of this register. For port D pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTDD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>2</plm:value>
                </plm:gPTDDValue_c>
                <plm:gPTDPEValue_c displayName="Port D pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D pull-up enable register (PTDPE).<br />
            For port D pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port D pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTDPEValue_c>
                <plm:gPTDDDValue_c displayName="Port D data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port D data direction register(PTDDD).<br />
            These read/write bits control the direction of port D pins and what is read for PTDD reads.<br /><blockquote>
              1 = Output driver enabled for port D bit n and PTDD reads return the contents of PTDDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTDDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>251</plm:value>
                </plm:gPTDDDValue_c>
                <plm:gPTDDSValue_c displayName="Port D drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port D drive strength register(PTDDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTDDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port D Bits - Each of these control bits selects between low and high
            output drive for the associated PTD pin. For port D pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port D bit n.<br />
            1 High output drive strength selected for port D bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTDDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTDDSValue_c>
                <plm:gPTEDValue_c displayName="Port E register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E data register (PTED).<br />
            Writes are latched into all bits of this register. For port E pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTED to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>20</plm:value>
                </plm:gPTEDValue_c>
                <plm:gPTEPEValue_c displayName="Port E pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E pull-up enable register (PTEPE).<br />
            For port E pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port E pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTEPEValue_c>
                <plm:gPTEDDValue_c displayName="Port E data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port E data direction register (PTEDD).<br />
            These read/write bits control the direction of port E pins and what is read for PTED reads.<br /><blockquote>
              1 = Output driver enabled for port E bit n and PTED reads return the contents of PTEDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTEDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>255</plm:value>
                </plm:gPTEDDValue_c>
                <plm:gPTEDSValue_c displayName="Port E drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port E drive strength register(PTEDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTEDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port E Bits - Each of these control bits selects between low and high
            output drive for the associated PTE pin. For port E pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port E bit n.<br />
            1 High output drive strength selected for port E bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTEDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTEDSValue_c>
                <plm:gPTFDValue_c displayName="Port F register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F data register (PTFD).<br />
            Writes are latched into all bits of this register. For port F pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTFD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDValue_c>
                <plm:gPTFPEValue_c displayName="Port F pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F pull-up enable register (PTFPE).<br />
            For port F pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port F pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFPEValue_c>
                <plm:gPTFDDValue_c displayName="Port F data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port F data direction register (PTFDD).<br />
            These read/write bits control the direction of port F pins and what is read for PTFD reads.<br /><blockquote>
              1 = Output driver enabled for port F bit n and PTFD reads return the contents of PTFDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTFDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDDValue_c>
                <plm:gPTFDSValue_c displayName="Port F drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port F drive strength register(PTFDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTFDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port F Bits - Each of these control bits selects between low and high
            output drive for the associated PTF pin. For port F pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port F bit n.<br />
            1 High output drive strength selected for port F bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTFDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTFDSValue_c>
                <plm:gPTGDValue_c displayName="Port G register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G data register (PTGD).<br />
            Writes are latched into all bits of this register. For port G pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTGD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDValue_c>
                <plm:gPTGPEValue_c displayName="Port G pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G pull-up enable register (PTGPE).<br />
            For port G pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port G pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGPEValue_c>
                <plm:gPTGDDValue_c displayName="Port G data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port G data direction register (PTGDD).<br />
            These read/write bits control the direction of port G pins and what is read for PTGD reads.<br /><blockquote>
              1 = Output driver enabled for port G bit n and PTGD reads return the contents of PTGDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTGDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDDValue_c>
                <plm:gPTGDSValue_c displayName="Port G drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port G drive strength register(PTGDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTGDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port G Bits - Each of these control bits selects between low and high
            output drive for the associated PTG pin. For port G pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port G bit n.<br />
            1 High output drive strength selected for port G bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTGDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTGDSValue_c>
                <plm:gPTHDValue_c displayName="Port H register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H data register (PTHD).<br />
            Writes are latched into all bits of this register. For port H pins that are configured as outputs, the logic level is driven out the corresponding MCU pin.<br />
            Reset forces PTGD to all 0s, but these 0s are not driven out the corresponding pins because reset also configures all port pins as high-impedance inputs with pullups disabled.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDValue_c>
                <plm:gPTHPEValue_c displayName="Port H pull-up enable register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H pull-up enable register (PTHPE).<br />
            For port H pins that are inputs, these read/write control bits determine whether internal pullup devices are enabled.<br />
            For port H pins that are configured as outputs, these bits are ignored and the internal pullup devices are disabled.<br /><blockquote>
              1 = Internal pullup device enabled for pin n.<br />
              0 = Internal pullup device disabled for pin n.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHPEValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHPEValue_c>
                <plm:gPTHDDValue_c displayName="Port H data direction register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            I/O port H data direction register (PTHDD).<br />
            These read/write bits control the direction of port H pins and what is read for PTHD reads.<br /><blockquote>
              1 = Output driver enabled for port G bit n and PTHD reads return the contents of PTHDn.<br />
              0 = Input (output driver disabled) and reads return the pin value.<br /></blockquote>
            n - represents the pin number.<br />
            This property is only used when the Target hardware is set to User defined target configuration.
          </temp:description>
                  <temp:regExLib name="define" param1="gPTHDDValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDDValue_c>
                <plm:gPTHDSValue_c displayName="Port H drive strength register" editor="BeeKitPlatformEditorV11">
                  <temp:description>
            Port H drive strength register(PTHDH).<br />
            An output pin can be selected to have high output drive strength by setting the corresponding bit in the
            drive strength select register (PTHDSn). When high drive is selected, a pin is capable of sourcing and
            sinking greater current. Even though every I/O pin can be selected as high drive, the user must ensure that
            the total current source and sink limits for the MCU are not exceeded. Drive strength selection is intended
            to affect the DC behavior of I/O pins. However, the AC behavior is also affected. High drive allows a pin
            to drive a greater load with the same switching speed as a low drive enabled pin into a smaller load.
            Because of this, the EMC emissions may be affected by enabling pins as high drive.<br /><br />
            Output Drive Strength Selection for Port H Bits - Each of these control bits selects between low and high
            output drive for the associated PTH pin. For port H pins that are configured as inputs, these bits have no effect.<br />
            0 Low output drive strength selected for port H bit n.<br />
            1 High output drive strength selected for port H bit<br /></temp:description>
                  <temp:regExLib name="define" param1="gPTHDSValue_c" />
                  <temp:format base="hex" />
                  <plm:value>0</plm:value>
                </plm:gPTHDSValue_c>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PowerManager.h" destination=".\PLM\Interface\PowerManager.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PWR_Configuration.h" destination=".\PLM\Interface\PWR_Configuration.h">
              <temp:description />
              <plm:properties>
                <plm:cPWR_DeepSleepMode displayName="Deep sleep wakeup">
                  <temp:description>
            The way that DeepSleep wake-up is handled. Following possibilities exist:<br /><br />
            0: No DeepSleep done, but application can set modes<br />
            1: Ext. KBI int wakeup<br />
            2: RTI timer wakeup every 1024mS +-30%<br />
            3: Ext. KBI int and RTI timer wakeup every 1024mS +-30%<br />
            4: Ext. KBI int and RTI timer wakeup +-30%, radio in hibernate - not reset<br />
            5: Radio in acoma/doze, supplying 62.5kHz clock to MCU, MCU in STOP3, RTI wakeup from ext clock 512mS (max avail with ext 62.5khz)<br />
            6: Radio in doze mode, supplying 62.5KHz to MCU, MCU in STOP3, radio wakeup after cPWR_DozeDurationMs, KBI Int Wake-up available also<br />
            30: Test of some stack code (Not good or valid anymore)<br />
            31: Test as #3 but power down only done once<br />
            33: Test of MCU Wait<br />
            34: Test of MCU Stop3<br />
            35: Test of MCU Stop2<br />
            36: Test of MCU Stop1<br />
            37: Test of RADIO Doze without clkout<br />
            38: Test of RADIO AcomaDoze without clkout<br />
            39: Test of RADIO Hibernate<br />
            40: Test of RADIO Off
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_DeepSleepMode" />
                  <plm:value>3</plm:value>
                </plm:cPWR_DeepSleepMode>
                <plm:cPWR_SleepMode displayName="Deep sleep handling">
                  <temp:description>
            The way that Sleep mode is handled. Following possibilities exist:<br /><br />
            0: No Sleep done, but application can set modes<br />
            1: Doze mode on radio with clock enabled and WAIT on MCU
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_SleepMode" />
                  <plm:value>1</plm:value>
                </plm:cPWR_SleepMode>
                <plm:cPWR_RTITickTime displayName="Distance between RTI interrupts">
                  <temp:description>
            The distance between RTI interrupts when enabled and in Stop2/3<br /><br />
            0: Disabled.<br />
            1: 8 ms.<br />
            2: 32 ms.<br />
            3: 64 ms.<br />
            4: 128 ms.<br />
            5: 256 ms.<br />
            6: 512 ms.<br />
            7: 1024 ms.
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_RTITickTime" />
                  <plm:value>7</plm:value>
                </plm:cPWR_RTITickTime>
                <plm:cPWR_RTITicks displayName="Tick time multiplier">
                  <temp:description>
            This number multiplied with the above "Distance between RTI interrupts" (cPWR_RTITickTime) time gives the time to DeepSleep.
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_RTITicks" />
                  <plm:value>3</plm:value>
                </plm:cPWR_RTITicks>
                <plm:cPWR_CallWakeupStackProcAfterDeepSleep displayName="Enabling of external call at wake-up">
                  <temp:description>
            Enabling of external call to a procedure each time that DeepSleep is exited.<br /><br />
            0: Don't call any functions after DeepSleep (MAC)<br />
            1: Call a function after DeepSleep (Stack)
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_CallWakeupStackProcAfterDeepSleep" />
                  <plm:value>1</plm:value>
                </plm:cPWR_CallWakeupStackProcAfterDeepSleep>
                <plm:cPWR_KBIWakeupEnable displayName="Enabling of KBI interrupts">
                  <temp:description>
            Select if the KBI interrupt has to be enabled or disabled if the define cPWR_KBIInitAndVectorEnable is TRUE.<br /><br />
            1: Also use KBI interrupt to wakeup<br />
            0: Don't use KBI int. on PTAx pins
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_KBIWakeupEnable" />
                  <plm:value>1</plm:value>
                </plm:cPWR_KBIWakeupEnable>
                <plm:cPWR_LVD_Enable displayName="Low Voltage Detection configuration">
                  <temp:description>
            The use of Low Voltage detection has the following possibilities:
              0: Don't use Low voltage detection at all
              1: Use polled =&gt; Check made each time the function is called.
              2: RTI timer used for handling when to poll LVD, according
                 to the cPWR_LVD_Ticks constant
              3: LVDE and LVDRE  are set to hold MCU in reset while LVD_VH condition is detected
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_Enable" />
                  <plm:value>3</plm:value>
                </plm:cPWR_LVD_Enable>
                <plm:cPWR_LVD_Ticks displayName="How often to check the LVD level">
                  <temp:description>
            How often to check the LVD level when cPWR_LVD_Enable == 2<br />
            This is the number of RTI interrupts before voltage is checked (consumes current and time).
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_Ticks" />
                  <plm:value>3600</plm:value>
                </plm:cPWR_LVD_Ticks>
                <plm:cPWR_LVD_LEVEL_50_Ticks displayName="Level 2 counter value">
                  <temp:description>
            A counter value to control LEVEL 2. The value will be decremented whenever
            PWR_NODEPOWER_LEVEL_66 is valid. System will change to PWR_NODEPOWER_LEVEL_50
            when the counter reaches 0. Must be adjusted according to how often the LVD
            is polled (cPWR_LVD_LEVEL_50_Ticks * cPWR_LVD_Ticks * cPWR_RTITickTime).
          </temp:description>
                  <temp:regExLib name="define" param1="cPWR_LVD_LEVEL_50_Ticks" />
                  <plm:value>10</plm:value>
                </plm:cPWR_LVD_LEVEL_50_Ticks>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\PWR_Interface.h" destination=".\PLM\Interface\PWR_Interface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\PWRLib.h" destination=".\PLM\Interface\PWRLib.h" />
            <temp:file version="1.0" source=".\Generic\Interface\RST_Interface.h" destination=".\PLM\Interface\RST_Interface.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Sound.h" destination=".\PLM\Interface\Sound.h">
              <temp:description />
              <plm:properties>
                <plm:Buzzer displayName="Buzzer module enabled">
                  <temp:description>
            This parameter enables or disables buzzer support.<br />
            Note: this property will only have effect on MC1321x-NCB and MC1321x-SRB targets.
          </temp:description>
                  <temp:regExLib name="define" param1="gBuzzerSupported_d" />
                  <plm:value>false</plm:value>
                </plm:Buzzer>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\Switch.h" destination=".\PLM\Interface\Switch.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1319xEVBSARD.h" destination=".\PLM\Interface\Switch_MC1319xEVBSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1319xGB60.h" destination=".\PLM\Interface\Switch_MC1319xGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\Switch_MC1321xNCBSRB.h" destination=".\PLM\Interface\Switch_MC1321xNCBSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetAxiomGB60.h" destination=".\PLM\Interface\TargetAxiomGB60.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xEVB.h" destination=".\PLM\Interface\TargetMC1319xEVB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xRD01.h" destination=".\PLM\Interface\TargetMC1319xRD01.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1319xSARD.h" destination=".\PLM\Interface\TargetMC1319xSARD.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1321xNCB.h" destination=".\PLM\Interface\TargetMC1321xNCB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1321xSRB.h" destination=".\PLM\Interface\TargetMC1321xSRB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetQE128xEVB.h" destination=".\PLM\Interface\TargetQE128xEVB.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xREM.h" destination=".\PLM\Interface\TargetMC1323xREM.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xRCM.h" destination=".\PLM\Interface\TargetMC1323xRCM.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xTWRRF.h" destination=".\PLM\Interface\TargetMC1323xTWRRF.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TargetMC1323xUSBR2.h" destination=".\PLM\Interface\TargetMC1323xUSBR2.h" />
            <temp:file version="1.0" source=".\Generic\Interface\TMR_Interface.h" destination=".\PLM\Interface\TMR_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:TmrApplicationTimers displayName="Number of available timers for the application">
                  <temp:description>
            The number of timers required for the application. This includes timers for the LED, KBD and UART platform modules. So if the
            application needs three timers, set this constant to 6 (if all the three modules mentioned are included).
          </temp:description>
                  <temp:regExLib name="define" param1="gTmrApplicationTimers_c" />
                  <plm:value>4</plm:value>
                </plm:TmrApplicationTimers>
                <plm:TMRDebug displayName="Enable timer module Debug">
                  <temp:description>
            This parameter (gTMR_Debug_d) causes the timer code to assert (loop forever) if the
            timer allocation function is asked for a timer and does not have any
            left. If this is turned off, be careful to check the return value from TMR_AllocateTimer().
          </temp:description>
                  <temp:regExLib name="define" param1="gTMR_Debug_d" />
                  <plm:value>true</plm:value>
                </plm:TMRDebug>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\UART_Interface.h" destination=".\PLM\Interface\UART_Interface.h">
              <temp:description />
              <plm:properties>
                <plm:Uart1_Enabled displayName="Enable the UART on SCI port 1">
                  <temp:description>
            Enables the UART functionality on SCI port 1 if set to True. Set to False if no UART functionality is wanted on SCI port 1<br /><br />
            For MC13213-NCB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC13213-SRB target the following applies:<br />
            SCI2 = UART on USB connector (only choice)<br /><br />
            For MC1320x-S08QE128-EVB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC1323x based targets the following applies:<br />
            SCI1 = UART on USB connector (only choice)<br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUart1_Enabled_d" />
                  <plm:value>true</plm:value>
                </plm:Uart1_Enabled>
                <plm:Uart2_Enabled displayName="Enable the UART on SCI port 2">
                  <temp:description>
            Enables the UART functionality on SCI port 2 if set to True. Set to False if no UART functionality is wanted on SCI port 2.<br /><br />
            For MC13213-NCB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC13213-SRB target the following applies:<br />
            SCI2 = UART on USB connector (only choice)<br /><br />
            For MC1320x-S08QE128-EVB target the following applies:<br />
            SCI1 = UART on RS232 connector<br />
            SCI2 = UART on USB<br /><br />
            For MC1323x based targets the following applies:<br />
            SCI1 = UART on USB connector (only choice)<br /><br /></temp:description>
                  <temp:regExLib name="define" param1="gUart2_Enabled_d" />
                  <plm:value>false</plm:value>
                </plm:Uart2_Enabled>
                <plm:gUART1_UseHWFlowControl_d displayName="UART 1 Hardware flow control enabled">
                  <temp:description>
            Set to True to use hardware flow control on UART 1. If you want to
            use no flow control, set to False. This property enables Flow Control
            on the receiver side (control of RTS1 output pin).
            If you want Flow Control on the transciever side please set the Full Hardware Flow Control property to true.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_EnableHWFlowControl_d" />
                  <plm:value>true</plm:value>
                </plm:gUART1_UseHWFlowControl_d>
                <plm:gUART1_UseFullHWFlowControl_d displayName="UART 1 Full Hardware flow control enabled">
                  <temp:description>
            Set to True to use Full hardware flow control on UART 1.
            This property enables Flow Control on the transciever side (monitoring of CTS1 pin).
            This property cannot be set ot true if the Hardware Flow Control property is set to false.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_EnableFullHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART1_UseFullHWFlowControl_d>
                <plm:gUART2_UseHWFlowControl_d displayName="UART 2 Hardware flow control enabled">
                  <temp:description>
            Set to True to use hardware flow control on UART 2. If you want to
            use no flow control, set to False. This property enables Flow Control
            on the receiver side (control of RTS2 output pin).
            If you want Flow Control on the transciever side please set the Full Hardware Flow Control property to true.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_EnableHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART2_UseHWFlowControl_d>
                <plm:gUART2_UseFullHWFlowControl_d displayName="UART 2 Full Hardware flow control enabled">
                  <temp:description>
            Set to True to use Full hardware flow control on UART 2.
            This property enables Flow Control on the transciever side (monitoring of CTS2 pin).
            This property cannot be set ot true if the Hardware Flow Control property is set to false.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_EnableFullHWFlowControl_d" />
                  <plm:value>false</plm:value>
                </plm:gUART2_UseFullHWFlowControl_d>
                <plm:gDefaultUartBaudRate_c displayName="UART Baud Rate">
                  <temp:description>
            This property defines the Baud Rate used for sending and receiving data over UART.<br /></temp:description>
                  <temp:regExLib name="define" param1="gUartDefaultBaud_c" />
                  <plm:value>Baudrate_115200</plm:value>
                </plm:gDefaultUartBaudRate_c>
                <plm:Uart_TransmitBuffers displayName="Uart Transmit Buffers">
                  <temp:description>
            The number of entries in the transmit-buffers-in-waiting list.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart_TransmitBuffers_c" />
                  <plm:value>3</plm:value>
                </plm:Uart_TransmitBuffers>
                <plm:Uart1_ReceiveBufferSize displayName="Uart 1 Receive Buffer Size">
                  <temp:description>
            Size of the driver's Rx circular buffer for UART1. These buffers are used to
            hold received bytes until the application can retrieve them via the
            UartX_GetBytesFromRxBuffer() functions, and are not otherwise accessable
            from outside the driver. The size does not need to be a power of two.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_ReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:Uart1_ReceiveBufferSize>
                <plm:Uart2_ReceiveBufferSize displayName="Uart 2 Receive Buffer Size">
                  <temp:description>
            Size of the driver's Rx circular buffer for UART2. These buffers are used to
            hold received bytes until the application can retrieve them via the
            UartX_GetBytesFromRxBuffer() functions, and are not otherwise accessable
            from outside the driver. The size does not need to be a power of two.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_ReceiveBufferSize_c" />
                  <plm:value>32</plm:value>
                </plm:Uart2_ReceiveBufferSize>
                <plm:Uart1_RxFlowControlSkew displayName="Uart 1 Rx FlowControl Skew">
                  <temp:description>
            If flow control is used, there is a delay before telling the far side
            to stop and the far side actually stopping. When there are SKEW bytes
            remaining in the driver's Rx buffer, tell the far side to stop
            transmitting. Setting for UART 1.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_RxFlowControlSkew_d" />
                  <plm:value>8</plm:value>
                </plm:Uart1_RxFlowControlSkew>
                <plm:Uart2_RxFlowControlSkew displayName="Uart 2 Rx FlowControl Skew">
                  <temp:description>
            If flow control is used, there is a delay before telling the far side
            to stop and the far side actually stopping. When there are SKEW bytes
            remaining in the driver's Rx buffer, tell the far side to stop
            transmitting. Setting for UART 2.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_RxFlowControlSkew_d" />
                  <plm:value>8</plm:value>
                </plm:Uart2_RxFlowControlSkew>
                <plm:Uart1_RxFlowControlResume displayName="Uart 1 Rx Flow Control Resume">
                  <temp:description>
            Number of bytes left in the Rx buffer when hardware flow control is deasserted.
            Settig for UART 1.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart1_RxFlowControlResume_d" />
                  <plm:value>8</plm:value>
                </plm:Uart1_RxFlowControlResume>
                <plm:Uart2_RxFlowControlResume displayName="Uart 2 Rx Flow Control Resume">
                  <temp:description>
            Number of bytes left in the Rx buffer when hardware flow control is deasserted.
            Setting for UART 2.
          </temp:description>
                  <temp:regExLib name="define" param1="gUart2_RxFlowControlResume_d" />
                  <plm:value>8</plm:value>
                </plm:Uart2_RxFlowControlResume>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\Generic\Interface\CDC_Interface.h" destination=".\PLM\Interface\CDC_Interface.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\crt0.h" destination=".\PLM\Source\Common\Interface\crt0.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\HCS08_Prefix.h" destination=".\PLM\Source\Common\Interface\HCS08_Prefix.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\icg.h" destination=".\PLM\Source\Common\Interface\icg.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Interface\PlatformInit.h" destination=".\PLM\Source\Common\Interface\PlatformInit.h">
              <temp:description />
              <plm:properties>
                <plm:gPpdMode_d displayName="Enable or disable the MC1323x Partial Power Down Capability">
                  <temp:description>
                    The RX Partial Power Down capability can be configured.
                    This feature is available only for MC1323x platforms.
                </temp:description>
                  <temp:regExLib name="define" param1="gPpdMode_d" />
                  <plm:value>gPpdModeOFF_d</plm:value>
                </plm:gPpdMode_d>
              </plm:properties>
            </temp:file>
            <temp:file version="1.0" source=".\HCS08\Source\Common\Mc1319xDrv\Mc1319xDrv.c" destination=".\PLM\Source\Common\Mc1319xDrv\Mc1319xDrv.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\crt0.c" destination=".\PLM\Source\Common\Sys\crt0.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\dummyisr.c" destination=".\PLM\Source\Common\Sys\dummyisr.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\icg.c" destination=".\PLM\Source\Common\Sys\icg.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\isrvectors.c" destination=".\PLM\Source\Common\Sys\isrvectors.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\NV_Data.c" destination=".\PLM\Source\Common\Sys\NV_Data.c" />
            <temp:file version="1.0" source=".\HCS08\Source\Common\Sys\PlatformInit.c" destination=".\PLM\Source\Common\Sys\PlatformInit.c" />
            <temp:file version="1.0" source=".\HCS08\Source\CMT\CMT.c" destination=".\PLM\Source\CMT\CMT.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\CMT\CMT.h" destination=".\PLM\Source\CMT\CMT.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display.c" destination=".\PLM\Source\Display\Display.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display_MC1323x_RCM.h" destination=".\PLM\Source\Display\Display_MC1323x_RCM.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Display\Display_MC1323x_RCM.c" destination=".\PLM\Source\Display\Display_MC1323x_RCM.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\FunctionLib\FunctionLib.c" destination=".\PLM\Source\FunctionLib\FunctionLib.c" />
            <temp:file version="1.0" source=".\HCS08\Source\IIC\IIC.c" destination=".\PLM\Source\IIC\IIC.c" />
            <temp:file version="1.0" source=".\HCS08\Source\IIC\IIC.h" destination=".\PLM\Source\IIC\IIC.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Keyboard\Keyboard.c" destination=".\PLM\Source\Keyboard\Keyboard.c" />
            <temp:file version="1.0" source=".\HCS08\Source\LED\Led.c" destination=".\PLM\Source\Led\Led.c" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWR.c" destination=".\PLM\Source\LPM\PWR.c" includeCondition=" (//plm:Processor/plm:value = 'MC9S08QE128') or (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWR_MC1323x.c" destination=".\PLM\Source\LPM\PWR_MC1323x.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\LPM\PWRLib.c" destination=".\PLM\Source\LPM\PWRLib.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_Flash.c" destination=".\PLM\Source\NVM\NV_Flash.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_Flash.h" destination=".\PLM\Source\NVM\NV_Flash.h" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_FlashHAL.c" destination=".\PLM\Source\NVM\NV_FlashHAL.c" />
            <temp:file version="1.0" source=".\HCS08\Source\NVM\NV_FlashHAL.h" destination=".\PLM\Source\NVM\NV_FlashHAL.h" />
            <temp:file version="1.0" source=".\HCS08\Source\RST\RSTHal.c" destination=".\PLM\Source\RST\RSTHal.c" />
            <temp:file version="1.0" source=".\HCS08\Source\SPI\SPI.c" destination=".\PLM\Source\SPI\SPI.c" />
            <temp:file version="1.0" source=".\HCS08\Source\SPI\SPI.h" destination=".\PLM\Source\SPI\SPI.h" />
            <temp:file version="1.0" source=".\HCS08\Source\Touchpad\Touchpad.c" destination=".\PLM\Source\Touchpad\Touchpad.c" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Touchpad\Touchpad.h" destination=".\PLM\Source\Touchpad\Touchpad.h" includeCondition=" (//plm:Target/plm:value = 'MC1323x-REM') or (//plm:Target/plm:value = 'MC1323x-RCM') or (//plm:Target/plm:value = 'MC1323x-TWR-RF') or                            ((//plm:Target/plm:value = 'User defined target configuration') and                            ((//plm:Processor/plm:value = 'MC13233C') or (//plm:Processor/plm:value = 'MC13234C') or (//plm:Processor/plm:value = 'MC13237C')))" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\Source\Sound\Sound.c" destination=".\PLM\Source\Sound\Sound.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TempSensor\LM61B.c" destination=".\PLM\Source\TempSensor\LM61B.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TMR\Timer.c" destination=".\PLM\Source\TMR\Timer.c" />
            <temp:file version="1.0" source=".\HCS08\Source\TMR\Timer.h" destination=".\PLM\Source\TMR\Timer.h" />
            <temp:file version="1.0" source=".\HCS08\Source\UART\Uart.c" destination=".\PLM\Source\UART\Uart.c" />
            <temp:file version="1.0" source=".\HCS08\Source\UART\Uart.h" destination=".\PLM\Source\UART\Uart.h" />
            <temp:file version="1.0" source=".\HCS08\Source\FunctionLib\FunctionLib.c" destination=".\PLM\Source\FunctionLib\FunctionLib.c" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_QE128_far_banked.prm" destination=".\PLM\PRM\Linker_QE128_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC9S08QE128')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13233C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13233C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13233C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13234C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13234C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13234C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker_MC13237C_far_banked.prm" destination=".\PLM\PRM\Linker_MC13237C_far_banked.prm" includeCondition="(//plm:Processor/plm:value = 'MC13237C')" copyInProject="includeCondition" />
            <temp:file version="1.0" source=".\HCS08\PRM\Linker.prm" destination=".\PLM\PRM\Linker.prm" includeCondition=" (//plm:Processor/plm:value = 'MC1321x')" copyInProject="includeCondition" />
          </temp:files>
          <temp:components />
        </plm:component>
      </sln:components>
    </sln:project>
  </sln:projects>
</sln:solution>